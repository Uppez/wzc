{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e00\u4e2a\u57fa\u4e8eMkdocs+python+Github\u5b9e\u73b0\u7684\u6587\u6863\u7f51\u7ad9 \u00b6 \u5b89\u88c5\u6559\u7a0b \u00b6 \u5982\u679c\u4f60\u4e5f\u60f3\u642d\u5efa\u4e00\u4e2a,\u4f60\u53ef\u4ee5 \u5efa\u7acb\u4e00\u4e2a\u81ea\u5df1\u7684WIKI\u6587\u6863 \u5b89\u88c5\u73af\u5883 \u00b6 python\u7248\u672c: 3.6.6 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0 \u989c\u8272\u4e3b\u9898 \u00b6 \u4e3b\u8272 \u00b6 \u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u4ecb\u7ecd"},{"location":"#mkdocspythongithub","text":"","title":"\u4e00\u4e2a\u57fa\u4e8eMkdocs+python+Github\u5b9e\u73b0\u7684\u6587\u6863\u7f51\u7ad9"},{"location":"#_1","text":"\u5982\u679c\u4f60\u4e5f\u60f3\u642d\u5efa\u4e00\u4e2a,\u4f60\u53ef\u4ee5 \u5efa\u7acb\u4e00\u4e2a\u81ea\u5df1\u7684WIKI\u6587\u6863","title":"\u5b89\u88c5\u6559\u7a0b"},{"location":"#_2","text":"python\u7248\u672c: 3.6.6 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0","title":"\u5b89\u88c5\u73af\u5883"},{"location":"#_3","text":"","title":"\u989c\u8272\u4e3b\u9898"},{"location":"#_4","text":"\u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"\u4e3b\u8272"},{"location":"#_5","text":"\u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u8f85\u52a9\u8272"},{"location":"about/","text":"\u535a\u4e3b\u59d3\u540d:\u738b\u8363\u80dc \u5c31\u8bfb:\u6cb3\u5357\u7406\u5de5\u5927\u5b66\u672c\u79d1\u751f \u8054\u7cfb\u65b9\u5f0f: QQ:603329354 QQ\u4ea4\u6d41\u7fa4:843108406 \u90ae\u7bb1: 603329354@qq.com \u60f3\u66f4\u52a0\u4e86\u89e3\u6211,\u8bf7\u8f6c\u81f3: \u6211\u7684\u4e3b\u9875-\u6559\u4e66\u7684\u5148\u751f \u6211\u6df1\u4fe1\u4e0d\u7591\u7684\u5c31\u662f:\u4ed6\u4eec\u4ee5\u68a6\u4e3a\u9a6c,\u6211\u504f\u4ee5\u7801\u4e3a\u68a6","title":"\u5173\u4e8e"},{"location":"baiqianmaibaiji/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4e2d\u56fd\u53e4\u4ee3\u6570\u5b66\u5bb6\u5f20\u4e18\u5efa\u5728\u4ed6\u7684\u300a\u7b97\u7ecf\u300b\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u8457\u540d\u7684\u201c\u767e\u94b1\u4e70\u767e\u9e21\u95ee\u9898\u201d\uff0c\u9e21\u7fc1\u4e00\uff0c\u503c\u94b1\u4e94\uff0c\u9e21\u6bcd\u4e00\uff0c\u503c\u94b1\u4e09\uff0c\u9e21\u96cf\u4e09\uff0c\u503c\u94b1\u4e00\uff0c\u767e\u94b1\u4e70\u767e\u9e21\uff0c\u95ee\u7fc1\u3001\u6bcd\u3001\u96cf\u5404\u51e0\u4f55\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <stdio.h> int main () { int cock , hen , chick ; /*\u5b9a\u4e49\u53d8\u7ae5\u4e3a\u57fa\u672c\u6574\u578b*/ for ( cock = 0 ; cock <= 20 ; cock ++ ) /*\u516c\u9e21\u8303\u56f4\u5728 0~20 \u4e4b\u95f4*/ for ( hen = 0 ; hen <= 33 ; hen ++ ) /*\u6bcd\u9e21\u8303\u56f4\u5728 0~33 \u4e4b\u95f4*/ for ( chick = 3 ; chick <= 99 ; chick ++ ) /*\u5c0f\u9e21\u8303\u56f4\u5728 3~99 \u4e4b\u95f4*/ if ( 5 * cock + 3 * hen + chick / 3 == 100 ) /*\u5224\u65ad\u94b1\u6570\u662f\u5426\u7b49\u4e8e 100*/ if ( cock + hen + chick == 100 ) /*\u5224\u65ad\u8d2d\u4e70\u7684\u9e21\u6570\u662f\u5426\u7b49\u4e8e 100*/ if ( chick % 3 == 0 ) /*\u5224\u65ad\u5c0f\u9e21\u6570\u662f\u5426\u80fd\u88ab 3 \u6574\u9664*/ printf ( \"\u516c\u9e21\uff1a%d\uff0c\u6bcd\u9e21\uff1a%d\uff0c\u5c0f\u9e21\uff1a%d \\n \" , cock , hen , chick ); return 0 ; }","title":"3.\u767e\u94b1\u4e70\u767e\u9e21"},{"location":"baiqianmaibaiji/#_1","text":"\u4e2d\u56fd\u53e4\u4ee3\u6570\u5b66\u5bb6\u5f20\u4e18\u5efa\u5728\u4ed6\u7684\u300a\u7b97\u7ecf\u300b\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u8457\u540d\u7684\u201c\u767e\u94b1\u4e70\u767e\u9e21\u95ee\u9898\u201d\uff0c\u9e21\u7fc1\u4e00\uff0c\u503c\u94b1\u4e94\uff0c\u9e21\u6bcd\u4e00\uff0c\u503c\u94b1\u4e09\uff0c\u9e21\u96cf\u4e09\uff0c\u503c\u94b1\u4e00\uff0c\u767e\u94b1\u4e70\u767e\u9e21\uff0c\u95ee\u7fc1\u3001\u6bcd\u3001\u96cf\u5404\u51e0\u4f55\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"baiqianmaibaiji/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 #include <stdio.h> int main () { int cock , hen , chick ; /*\u5b9a\u4e49\u53d8\u7ae5\u4e3a\u57fa\u672c\u6574\u578b*/ for ( cock = 0 ; cock <= 20 ; cock ++ ) /*\u516c\u9e21\u8303\u56f4\u5728 0~20 \u4e4b\u95f4*/ for ( hen = 0 ; hen <= 33 ; hen ++ ) /*\u6bcd\u9e21\u8303\u56f4\u5728 0~33 \u4e4b\u95f4*/ for ( chick = 3 ; chick <= 99 ; chick ++ ) /*\u5c0f\u9e21\u8303\u56f4\u5728 3~99 \u4e4b\u95f4*/ if ( 5 * cock + 3 * hen + chick / 3 == 100 ) /*\u5224\u65ad\u94b1\u6570\u662f\u5426\u7b49\u4e8e 100*/ if ( cock + hen + chick == 100 ) /*\u5224\u65ad\u8d2d\u4e70\u7684\u9e21\u6570\u662f\u5426\u7b49\u4e8e 100*/ if ( chick % 3 == 0 ) /*\u5224\u65ad\u5c0f\u9e21\u6570\u662f\u5426\u80fd\u88ab 3 \u6574\u9664*/ printf ( \"\u516c\u9e21\uff1a%d\uff0c\u6bcd\u9e21\uff1a%d\uff0c\u5c0f\u9e21\uff1a%d \\n \" , cock , hen , chick ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"daxie/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5728 C \u8bed\u8a00\u4e2d\u533a\u5206\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\uff0c\u5229\u7528 ASCII \u7801\u4e2d\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff08\u5dee\u503c\u4e3a 32\uff09\uff0c\u53ef\u4ee5\u5c06\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\u3002\u7f16\u5199\u7a0b\u5e8f\u5b9e\u73b0\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u6309\u56de\u8f66\u952e\uff0c\u7a0b\u5e8f\u5c06\u8be5\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u5e76\u8f93\u51fa\u5176 ASCII \u503c\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 #include <stdio.h> int main () { char a , b ; printf ( \"\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd: \\n \" ); a = getchar (); b = a - 32 ; printf ( \"\u8f6c\u6362\u540e\u7684\u5b57\u6bcd\u4e3a\uff1a%c\uff0c%d \\n \" , b , b ); return 0 ; }","title":"18.\u5c0f\u5199\u5b57\u6bcd\u6362\u5927\u5199\u5b57\u6bcd"},{"location":"daxie/#_1","text":"\u5728 C \u8bed\u8a00\u4e2d\u533a\u5206\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\uff0c\u5229\u7528 ASCII \u7801\u4e2d\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff08\u5dee\u503c\u4e3a 32\uff09\uff0c\u53ef\u4ee5\u5c06\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\u3002\u7f16\u5199\u7a0b\u5e8f\u5b9e\u73b0\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u6309\u56de\u8f66\u952e\uff0c\u7a0b\u5e8f\u5c06\u8be5\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u5e76\u8f93\u51fa\u5176 ASCII \u503c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"daxie/#_2","text":"1 2 3 4 5 6 7 8 9 10 #include <stdio.h> int main () { char a , b ; printf ( \"\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd: \\n \" ); a = getchar (); b = a - 32 ; printf ( \"\u8f6c\u6362\u540e\u7684\u5b57\u6bcd\u4e3a\uff1a%c\uff0c%d \\n \" , b , b ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"dengyao/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u672c\u5b9e\u4f8b\u8981\u6c42\u4ece\u952e\u76d8\u8f93\u5165\u4efb\u610f\u6574\u6570 n\uff0c\u901a\u8fc7\u7a0b\u5e8f\u8fd0\u884c\u8f93\u51fa\u5bf9\u5e94\u9ad8\u5ea6\u4e3a n \u7684\u7b49\u8170\u4e09\u89d2\u5f62\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <stdio.h> int trangle ( int n ) { int i , j ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= n - i ; j ++ ) putchar ( ' ' ); for ( j = 0 ; j <= 2 * i ; j ++ ) putchar ( '*' ); putchar ( '\\n' ); } return 0 ; } int main () { int n ; printf ( \"Enter n\uff1a\" ); scanf ( \"%d\" , & n ); printf ( \" \\n \" ); trangle ( n ); return 0 ; }","title":"28.\u8f93\u51fa\u7b49\u8170\u4e09\u89d2\u5f62"},{"location":"dengyao/#_1","text":"\u672c\u5b9e\u4f8b\u8981\u6c42\u4ece\u952e\u76d8\u8f93\u5165\u4efb\u610f\u6574\u6570 n\uff0c\u901a\u8fc7\u7a0b\u5e8f\u8fd0\u884c\u8f93\u51fa\u5bf9\u5e94\u9ad8\u5ea6\u4e3a n \u7684\u7b49\u8170\u4e09\u89d2\u5f62\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"dengyao/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <stdio.h> int trangle ( int n ) { int i , j ; for ( i = 0 ; i < n ; i ++ ) { for ( j = 0 ; j <= n - i ; j ++ ) putchar ( ' ' ); for ( j = 0 ; j <= 2 * i ; j ++ ) putchar ( '*' ); putchar ( '\\n' ); } return 0 ; } int main () { int n ; printf ( \"Enter n\uff1a\" ); scanf ( \"%d\" , & n ); printf ( \" \\n \" ); trangle ( n ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"dingjifen/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5229\u7528\u68af\u5f62\u6cd5\u8ba1\u7b97\u5b9a\u79ef\u5206 \u5176\u4e2d\uff0c f(x)=x3+3x2-x+2\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <stdio.h> #include <math.h> float collect ( float s , float t , int m , float ( * p )( float x )); float fun1 ( float x ); float fun2 ( float x ); float fun3 ( float x ); float fun4 ( float x ); int main () { int n , flag ; float a , b , v = 0.0 ; printf ( \"Input the count range(from A to B)and the number of sections. \\n \" ); scanf ( \"%f%f%d\" , & a , & b , & n ); printf ( \"Enter your choice\uff1a'1' for fun1,'2' for fun2,'3' for fun3,'4' for fun4==>\" ); scanf ( \"%d\" , & flag ); if ( flag == 1 ) v = collect ( a , b , n , fun1 ); else if ( flag == 2 ) v = collect ( a , b , n , fun2 ); else if ( flag == 3 ) v = collect ( a , b , n , fun3 ); else v = collect ( a , b , n , fun4 ); printf ( \"v=%f \\n \" , v ); return 0 ; } float collect ( float s , float t , int n , float ( * p )( float x )) { int i ; float f , h , x , y1 , y2 , area ; f = 0.0 ; h = ( t - s ) / n ; x = s ; y1 = ( * p )( x ); for ( i = 1 ; i <= n ; i ++ ) { x = x + h ; y2 = ( * p )( x ); area = ( y1 + y2 ) * h / 2 ; y1 = y2 ; f = f + area ; } return ( f ); } float fun1 ( float x ) { float fx ; fx = x * x - 2.0 * x + 2.0 ; return ( fx ); } float fun2 ( float x ) { float fx ; fx = x * x * x + 3.0 * x * x - x + 2.0 ; return ( fx ); } float fun3 ( float x ) { float fx ; fx = x * sqrt ( 1 + cos ( 2 * x )); return ( fx ); } float fun4 ( float x ) { float fx ; fx = 1 / ( 1.0 + x * x ); return ( fx ); }","title":"32.\u6c42\u5b9a\u79ef\u5206"},{"location":"dingjifen/#_1","text":"\u5229\u7528\u68af\u5f62\u6cd5\u8ba1\u7b97\u5b9a\u79ef\u5206 \u5176\u4e2d\uff0c f(x)=x3+3x2-x+2\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"dingjifen/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <stdio.h> #include <math.h> float collect ( float s , float t , int m , float ( * p )( float x )); float fun1 ( float x ); float fun2 ( float x ); float fun3 ( float x ); float fun4 ( float x ); int main () { int n , flag ; float a , b , v = 0.0 ; printf ( \"Input the count range(from A to B)and the number of sections. \\n \" ); scanf ( \"%f%f%d\" , & a , & b , & n ); printf ( \"Enter your choice\uff1a'1' for fun1,'2' for fun2,'3' for fun3,'4' for fun4==>\" ); scanf ( \"%d\" , & flag ); if ( flag == 1 ) v = collect ( a , b , n , fun1 ); else if ( flag == 2 ) v = collect ( a , b , n , fun2 ); else if ( flag == 3 ) v = collect ( a , b , n , fun3 ); else v = collect ( a , b , n , fun4 ); printf ( \"v=%f \\n \" , v ); return 0 ; } float collect ( float s , float t , int n , float ( * p )( float x )) { int i ; float f , h , x , y1 , y2 , area ; f = 0.0 ; h = ( t - s ) / n ; x = s ; y1 = ( * p )( x ); for ( i = 1 ; i <= n ; i ++ ) { x = x + h ; y2 = ( * p )( x ); area = ( y1 + y2 ) * h / 2 ; y1 = y2 ; f = f + area ; } return ( f ); } float fun1 ( float x ) { float fx ; fx = x * x - 2.0 * x + 2.0 ; return ( fx ); } float fun2 ( float x ) { float fx ; fx = x * x * x + 3.0 * x * x - x + 2.0 ; return ( fx ); } float fun3 ( float x ) { float fx ; fx = x * sqrt ( 1 + cos ( 2 * x )); return ( fx ); } float fun4 ( float x ) { float fx ; fx = 1 / ( 1.0 + x * x ); return ( fx ); }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"erfen/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u672c\u5b9e\u4f8b\u91c7\u7528\u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\u7279\u5b9a\u5173\u952e\u5b57\u7684\u5143\u7d20\u3002\u8981\u6c42\u7528\u6237\u8f93\u5165\u6570\u7ec4\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6709\u5e8f\u8868\u7684\u6570\u636e\u957f\u5ea6\uff0c\u5e76\u8f93\u5165\u6570\u7ec4\u5143\u7d20\u548c\u67fb\u627e\u7684\u5173\u952e\u5b57\u3002\u7a0b\u5e8f\u8f93\u51fa\u67e5\u627e\u6210\u529f\u4e0e\u5426\uff0c\u4ee5\u53ca\u6210\u529f\u65f6\u5173\u952e\u5b57\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5728\u6709\u5e8f\u8868 11\u300113\u300118\u3001 28\u300139\u300156\u300169\u300189\u300198\u3001122 \u4e2d\u67fb\u627e\u5173\u952e\u5b57\u4e3a 89 \u7684\u5143\u7d20\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <stdio.h> int binary_search ( int key , int a [], int n ) //\u81ea\u5b9a\u4e49\u51fd\u6570binary_search() { int low , high , mid , count = 0 , count1 = 0 ; low = 0 ; high = n - 1 ; while ( low < high ) //\u67fb\u627e\u8303\u56f4\u4e0d\u4e3a0\u65f6\u6267\u884c\u5faa\u73af\u4f53\u8bed\u53e5 { count ++ ; //count\u8bb0\u5f55\u67fb\u627e\u6b21\u6570 mid = ( low + high ) / 2 ; //\u6c42\u4e2d\u95f4\u4f4d\u7f6e if ( key < a [ mid ]) //key\u5c0f\u4e8e\u4e2d\u95f4\u503c\u65f6 high = mid - 1 ; //\u786e\u5b9a\u5de6\u5b50\u8868\u8303\u56f4 else if ( key > a [ mid ]) //key \u5927\u4e8e\u4e2d\u95f4\u503c\u65f6 low = mid + 1 ; //\u786e\u5b9a\u53f3\u5b50\u8868\u8303\u56f4 else if ( key == a [ mid ]) //\u5f53key\u7b49\u4e8e\u4e2d\u95f4\u503c\u65f6\uff0c\u8bc1\u660e\u67e5\u627e\u6210\u529f { printf ( \"\u67e5\u627e\u6210\u529f! \\n \u67e5\u627e %d \u6b21!a[%d]=%d\" , count , mid , key ); //\u8f93\u51fa\u67fb\u627e\u6b21\u6570\u53ca\u6240\u67fb\u627e\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e count1 ++ ; //count1\u8bb0\u5f55\u67e5\u627e\u6210\u529f\u6b21\u6570 break ; } } if ( count1 == 0 ) //\u5224\u65ad\u662f\u5426\u67e5\u627e\u5931\u6557 printf ( \"\u67e5\u627e\u5931\u6557!\" ); //\u67fb\u627e\u5931\u6557\u8f93\u51fano found return 0 ; } int main () { int i , key , a [ 100 ], n ; printf ( \"\u8bf7\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\uff1a \\n \" ); scanf ( \"%d\" , & n ); //\u8f93\u5165\u6570\u7ec4\u5143\u7d20\u4e2a\u6570 printf ( \"\u8bf7\u8f93\u5165\u6570\u7ec4\u5143\u7d20\uff1a \\n \" ); for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u8f93\u5165\u6709\u5e8f\u6570\u5217\u5230\u6570\u7ec4a\u4e2d printf ( \"\u8bf7\u8f93\u5165\u4f60\u60f3\u67e5\u627e\u7684\u5143\u7d20\uff1a \\n \" ); scanf ( \"%d\" , & key ); //\u8f93\u5165\u8981^\u627e\u7684\u5173\u952e\u5b57 binary_search ( key , a , n ); //\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 printf ( \" \\n \" ); return 0 ; }","title":"11.\u4e8c\u5206(\u6298\u534a)\u67e5\u627e"},{"location":"erfen/#_1","text":"\u672c\u5b9e\u4f8b\u91c7\u7528\u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\u7279\u5b9a\u5173\u952e\u5b57\u7684\u5143\u7d20\u3002\u8981\u6c42\u7528\u6237\u8f93\u5165\u6570\u7ec4\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6709\u5e8f\u8868\u7684\u6570\u636e\u957f\u5ea6\uff0c\u5e76\u8f93\u5165\u6570\u7ec4\u5143\u7d20\u548c\u67fb\u627e\u7684\u5173\u952e\u5b57\u3002\u7a0b\u5e8f\u8f93\u51fa\u67e5\u627e\u6210\u529f\u4e0e\u5426\uff0c\u4ee5\u53ca\u6210\u529f\u65f6\u5173\u952e\u5b57\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5728\u6709\u5e8f\u8868 11\u300113\u300118\u3001 28\u300139\u300156\u300169\u300189\u300198\u3001122 \u4e2d\u67fb\u627e\u5173\u952e\u5b57\u4e3a 89 \u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"erfen/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <stdio.h> int binary_search ( int key , int a [], int n ) //\u81ea\u5b9a\u4e49\u51fd\u6570binary_search() { int low , high , mid , count = 0 , count1 = 0 ; low = 0 ; high = n - 1 ; while ( low < high ) //\u67fb\u627e\u8303\u56f4\u4e0d\u4e3a0\u65f6\u6267\u884c\u5faa\u73af\u4f53\u8bed\u53e5 { count ++ ; //count\u8bb0\u5f55\u67fb\u627e\u6b21\u6570 mid = ( low + high ) / 2 ; //\u6c42\u4e2d\u95f4\u4f4d\u7f6e if ( key < a [ mid ]) //key\u5c0f\u4e8e\u4e2d\u95f4\u503c\u65f6 high = mid - 1 ; //\u786e\u5b9a\u5de6\u5b50\u8868\u8303\u56f4 else if ( key > a [ mid ]) //key \u5927\u4e8e\u4e2d\u95f4\u503c\u65f6 low = mid + 1 ; //\u786e\u5b9a\u53f3\u5b50\u8868\u8303\u56f4 else if ( key == a [ mid ]) //\u5f53key\u7b49\u4e8e\u4e2d\u95f4\u503c\u65f6\uff0c\u8bc1\u660e\u67e5\u627e\u6210\u529f { printf ( \"\u67e5\u627e\u6210\u529f! \\n \u67e5\u627e %d \u6b21!a[%d]=%d\" , count , mid , key ); //\u8f93\u51fa\u67fb\u627e\u6b21\u6570\u53ca\u6240\u67fb\u627e\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e count1 ++ ; //count1\u8bb0\u5f55\u67e5\u627e\u6210\u529f\u6b21\u6570 break ; } } if ( count1 == 0 ) //\u5224\u65ad\u662f\u5426\u67e5\u627e\u5931\u6557 printf ( \"\u67e5\u627e\u5931\u6557!\" ); //\u67fb\u627e\u5931\u6557\u8f93\u51fano found return 0 ; } int main () { int i , key , a [ 100 ], n ; printf ( \"\u8bf7\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\uff1a \\n \" ); scanf ( \"%d\" , & n ); //\u8f93\u5165\u6570\u7ec4\u5143\u7d20\u4e2a\u6570 printf ( \"\u8bf7\u8f93\u5165\u6570\u7ec4\u5143\u7d20\uff1a \\n \" ); for ( i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u8f93\u5165\u6709\u5e8f\u6570\u5217\u5230\u6570\u7ec4a\u4e2d printf ( \"\u8bf7\u8f93\u5165\u4f60\u60f3\u67e5\u627e\u7684\u5143\u7d20\uff1a \\n \" ); scanf ( \"%d\" , & key ); //\u8f93\u5165\u8981^\u627e\u7684\u5173\u952e\u5b57 binary_search ( key , a , n ); //\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"fenkuai/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4f8b\u5982\uff0c\u91c7\u7528\u5206\u5757\u67e5\u627e\u6cd5\u5728\u6709\u5e8f\u8868 11\u300112\u300118\u300128\u300139\u300156\u300169\u300189\u300196\u3001122\u3001135\u3001146\u3001156\u3001256\u3001298 \u4e2d\u67e5\u627e\u5173\u952e\u5b57\u4e3a 96 \u7684\u5143\u7d20\u3002 \u67fb\u627e\u7279\u5b9a\u5173\u952e\u5b57\u5143\u7d20\u4e2a\u6570\u4e3a 15\uff0c\u8981\u6c42\u7528\u6237\u8f93\u5165\u6709\u5e8f\u8868\u5404\u5143\u7d20\uff0c\u7a0b\u5e8f\u8f93\u51fa\u67fb\u627e\u6210\u529f\u4e0e\u5426\uff0c\u82e5\u6210\u529f\uff0c\u8fd8\u663e\u793a\u5143\u7d20\u5728\u6709\u5e8f\u8868\u4e2d\u7684\u4f4d\u7f5d\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <stdio.h> struct index //\u5b9a\u4e49\u5757\u7684\u7ed3\u6784 { int key ; //\u5757\u7684\u5173\u952e\u5b57 int start ; //\u5757\u7684\u8d77\u59cb\u503c int end ; //\u5757\u7684\u7ed3\u675f\u503c } index_table [ 4 ]; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u6570\u7ec4 int block_search ( int key , int a []) //\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5206\u5757\u67e5\u627e { int i , j ; i = 1 ; while ( i <= 3 && key > index_table [ i ]. key ) //\u786e\u5b9a\u5728\u54ea\u4e2a\u5757\u4e2d i ++ ; if ( i > 3 ) //\u5927\u4e8e\u5206\u5f97\u7684\u5757\u6570\uff0c\u5219\u8fd4\u56de0 return 0 ; j = index_table [ i ]. start ; //j\u7b49\u4e8e\u5757\u8303\u56f4\u7684\u8d77\u59cb\u503c while ( j <= index_table [ i ]. end && a [ j ] != key ) //\u5728\u786e\u5b9a\u7684\u5757\u5185\u8fdb\u884c\u987a\u5e8f\u67e5\u627e j ++ ; if ( j > index_table [ i ]. end ) //\u5982\u679c\u5927\u4e8e\u5757\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u8981\u67fb\u627e\u7684\u6570\uff0cj\u7f6e0 j = 0 ; return j ; } int main () { int i , j = 0 , k , key , a [ 16 ]; printf ( \"\u8bf7\u8f93\u516515\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i < 16 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u8f93\u5165\u7531\u5c0f\u5230\u5927\u768415\u4e2a\u6570 for ( i = 1 ; i <= 3 ; i ++ ) { index_table [ i ]. start = j + 1 ; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u7684\u8d77\u59cb\u503c j = j + 1 ; index_table [ i ]. end = j + 4 ; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u7684\u7ed3\u675f\u503c j = j + 4 ; index_table [ i ]. key = a [ j ]; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u4e2d\u5143\u7d20\u7684\u6700\u5927\u503c } printf ( \"\u8bf7\u8f93\u5165\u4f60\u60f3\u67fb\u627e\u7684\u5143\u7d20\uff1a \\n \" ); scanf ( \"%d\" , & key ); //\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6570\u503c k = block_search ( key , a ); //\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u6773\u627e if ( k != 0 ) printf ( \"\u67e5\u627e\u6210\u529f\uff0c\u5176\u4f4d\u7f6e\u662f\uff1a%d \\n \" , k ); //\u5982\u679c\u627e\u5230\u8be5\u6570\uff0c\u5219\u8f93\u51fa\u5176\u4f4d\u7f6e else printf ( \"\u67e5\u627e\u5931\u8d25!\" ); //\u82e5\u672a\u627e\u5230\uff0c\u5219\u8f93\u51fa\u63d0\u793a\u4fe1\u606f return 0 \uff1b }","title":"12.\u5206\u5757(\u7d22\u5f15\u987a\u5e8f)\u67e5\u627e"},{"location":"fenkuai/#_1","text":"\u4f8b\u5982\uff0c\u91c7\u7528\u5206\u5757\u67e5\u627e\u6cd5\u5728\u6709\u5e8f\u8868 11\u300112\u300118\u300128\u300139\u300156\u300169\u300189\u300196\u3001122\u3001135\u3001146\u3001156\u3001256\u3001298 \u4e2d\u67e5\u627e\u5173\u952e\u5b57\u4e3a 96 \u7684\u5143\u7d20\u3002 \u67fb\u627e\u7279\u5b9a\u5173\u952e\u5b57\u5143\u7d20\u4e2a\u6570\u4e3a 15\uff0c\u8981\u6c42\u7528\u6237\u8f93\u5165\u6709\u5e8f\u8868\u5404\u5143\u7d20\uff0c\u7a0b\u5e8f\u8f93\u51fa\u67fb\u627e\u6210\u529f\u4e0e\u5426\uff0c\u82e5\u6210\u529f\uff0c\u8fd8\u663e\u793a\u5143\u7d20\u5728\u6709\u5e8f\u8868\u4e2d\u7684\u4f4d\u7f5d\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"fenkuai/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <stdio.h> struct index //\u5b9a\u4e49\u5757\u7684\u7ed3\u6784 { int key ; //\u5757\u7684\u5173\u952e\u5b57 int start ; //\u5757\u7684\u8d77\u59cb\u503c int end ; //\u5757\u7684\u7ed3\u675f\u503c } index_table [ 4 ]; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u6570\u7ec4 int block_search ( int key , int a []) //\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5206\u5757\u67e5\u627e { int i , j ; i = 1 ; while ( i <= 3 && key > index_table [ i ]. key ) //\u786e\u5b9a\u5728\u54ea\u4e2a\u5757\u4e2d i ++ ; if ( i > 3 ) //\u5927\u4e8e\u5206\u5f97\u7684\u5757\u6570\uff0c\u5219\u8fd4\u56de0 return 0 ; j = index_table [ i ]. start ; //j\u7b49\u4e8e\u5757\u8303\u56f4\u7684\u8d77\u59cb\u503c while ( j <= index_table [ i ]. end && a [ j ] != key ) //\u5728\u786e\u5b9a\u7684\u5757\u5185\u8fdb\u884c\u987a\u5e8f\u67e5\u627e j ++ ; if ( j > index_table [ i ]. end ) //\u5982\u679c\u5927\u4e8e\u5757\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u8981\u67fb\u627e\u7684\u6570\uff0cj\u7f6e0 j = 0 ; return j ; } int main () { int i , j = 0 , k , key , a [ 16 ]; printf ( \"\u8bf7\u8f93\u516515\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i < 16 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u8f93\u5165\u7531\u5c0f\u5230\u5927\u768415\u4e2a\u6570 for ( i = 1 ; i <= 3 ; i ++ ) { index_table [ i ]. start = j + 1 ; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u7684\u8d77\u59cb\u503c j = j + 1 ; index_table [ i ]. end = j + 4 ; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u7684\u7ed3\u675f\u503c j = j + 4 ; index_table [ i ]. key = a [ j ]; //\u786e\u5b9a\u6bcf\u4e2a\u5757\u8303\u56f4\u4e2d\u5143\u7d20\u7684\u6700\u5927\u503c } printf ( \"\u8bf7\u8f93\u5165\u4f60\u60f3\u67fb\u627e\u7684\u5143\u7d20\uff1a \\n \" ); scanf ( \"%d\" , & key ); //\u8f93\u5165\u8981\u67e5\u8be2\u7684\u6570\u503c k = block_search ( key , a ); //\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u6773\u627e if ( k != 0 ) printf ( \"\u67e5\u627e\u6210\u529f\uff0c\u5176\u4f4d\u7f6e\u662f\uff1a%d \\n \" , k ); //\u5982\u679c\u627e\u5230\u8be5\u6570\uff0c\u5219\u8f93\u51fa\u5176\u4f4d\u7f6e else printf ( \"\u67e5\u627e\u5931\u8d25!\" ); //\u82e5\u672a\u627e\u5230\uff0c\u5219\u8f93\u51fa\u63d0\u793a\u4fe1\u606f return 0 \uff1b }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"gongbeishu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6c42\u4efb\u610f\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff08LCM\uff09\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int m , n , temp , i ; printf ( \"Input m & n:\" ); scanf ( \"%d%d\" , & m , & n ); if ( m < n ) /*\u6bd4\u8f83\u5927\u5c0f\uff0c\u4f7f\u5f97m\u4e2d\u5b58\u50a8\u5927\u6570\uff0cn\u4e2d\u5b58\u50a8\u5c0f\u6570*/ { temp = m ; m = n ; n = temp ; } for ( i = m ; i > 0 ; i ++ ) /*\u4ece\u5927\u6570\u5f00\u59cb\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570*/ if ( i % m == 0 && i % n == 0 ) { /*\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570\u5e76\u7ed3\u675f\u5faa\u73af*/ printf ( \"The LCW of %d and %d is: %d \\n \" , m , n , i ); break ; } return 0 ; }","title":"46.\u6c42\u6700\u5c0f\u516c\u500d\u6570"},{"location":"gongbeishu/#_1","text":"\u6c42\u4efb\u610f\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff08LCM\uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"gongbeishu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int m , n , temp , i ; printf ( \"Input m & n:\" ); scanf ( \"%d%d\" , & m , & n ); if ( m < n ) /*\u6bd4\u8f83\u5927\u5c0f\uff0c\u4f7f\u5f97m\u4e2d\u5b58\u50a8\u5927\u6570\uff0cn\u4e2d\u5b58\u50a8\u5c0f\u6570*/ { temp = m ; m = n ; n = temp ; } for ( i = m ; i > 0 ; i ++ ) /*\u4ece\u5927\u6570\u5f00\u59cb\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570*/ if ( i % m == 0 && i % n == 0 ) { /*\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570\u5e76\u7ed3\u675f\u5faa\u73af*/ printf ( \"The LCW of %d and %d is: %d \\n \" , m , n , i ); break ; } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"gongyueshu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6c42\u4efb\u610f\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff08GCD\uff09\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int m , n , temp , i ; printf ( \"Input m & n:\" ); scanf ( \"%d%d\" , & m , & n ); if ( m < n ) /*\u6bd4\u8f83\u5927\u5c0f\uff0c\u4f7f\u5f97m\u4e2d\u5b58\u50a8\u5927\u6570\uff0cn\u4e2d\u5b58\u50a8\u5c0f\u6570*/ { /*\u4ea4\u6362m\u548cn\u7684\u503c*/ temp = m ; m = n ; n = temp ; } for ( i = n ; i > 0 ; i -- ) /*\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570*/ if ( m % i == 0 && n % i == 0 ) { /*\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570\u5e76\u7ed3\u675f\u5faa\u73af*/ printf ( \"The GCD of %d and %d is: %d \\n \" , m , n , i ); break ; } return 0 ; }","title":"45.\u6c42\u6700\u5927\u516c\u7ea6\u6570"},{"location":"gongyueshu/#_1","text":"\u6c42\u4efb\u610f\u4e24\u4e2a\u6b63\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff08GCD\uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"gongyueshu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int m , n , temp , i ; printf ( \"Input m & n:\" ); scanf ( \"%d%d\" , & m , & n ); if ( m < n ) /*\u6bd4\u8f83\u5927\u5c0f\uff0c\u4f7f\u5f97m\u4e2d\u5b58\u50a8\u5927\u6570\uff0cn\u4e2d\u5b58\u50a8\u5c0f\u6570*/ { /*\u4ea4\u6362m\u548cn\u7684\u503c*/ temp = m ; m = n ; n = temp ; } for ( i = n ; i > 0 ; i -- ) /*\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5bfb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570*/ if ( m % i == 0 && n % i == 0 ) { /*\u8f93\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u81ea\u7136\u6570\u5e76\u7ed3\u675f\u5faa\u73af*/ printf ( \"The GCD of %d and %d is: %d \\n \" , m , n , i ); break ; } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"gougushu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6c42100\u4ee5\u5185\u7684\u6240\u6709\u52fe\u80a1\u6570\u3002 \u6240\u8c13\u52fe\u80a1\u6570\uff0c\u662f\u6307\u80fd\u591f\u6784\u6210\u76f4\u89d2\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u7684\u4e09\u4e2a\u6b63\u6574\u6570\uff08a\uff0cb\uff0cc\uff09\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> #include <math.h> int main () { int a , b , c , count = 0 ; printf ( \"100\u4ee5\u5185\u7684\u52fe\u80a1\u6570\u6709\uff1a \\n \" ); printf ( \" a b c a b c a b c a b c \\n \" ); /*\u6c42100\u4ee5\u5185\u52fe\u80a1\u6570*/ for ( a = 1 ; a <= 100 ; a ++ ) for ( b = a + 1 ; b <= 100 ; b ++ ) { c = ( int ) sqrt ( a * a + b * b ); /*\u6c42c\u503c*/ if ( c * c == a * a + b * b && a + b > c && a + c > b && b + c > a && c <= 100 ) /*\u5224\u65adc\u7684\u5e73\u65b9\u662f\u5426\u7b49\u4e8ea2+b2*/ { printf ( \"%4d %4d %4d \" , a , b , c ); count ++ ; if ( count % 4 == 0 ) /*\u6bcf\u8f93\u51fa4\u7ec4\u89e3\u5c31\u6362\u884c*/ printf ( \" \\n \" ); } } printf ( \" \\n \" ); return 0 ; }","title":"44.\u6c42\u52fe\u80a1\u6570"},{"location":"gougushu/#_1","text":"\u6c42100\u4ee5\u5185\u7684\u6240\u6709\u52fe\u80a1\u6570\u3002 \u6240\u8c13\u52fe\u80a1\u6570\uff0c\u662f\u6307\u80fd\u591f\u6784\u6210\u76f4\u89d2\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u7684\u4e09\u4e2a\u6b63\u6574\u6570\uff08a\uff0cb\uff0cc\uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"gougushu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> #include <math.h> int main () { int a , b , c , count = 0 ; printf ( \"100\u4ee5\u5185\u7684\u52fe\u80a1\u6570\u6709\uff1a \\n \" ); printf ( \" a b c a b c a b c a b c \\n \" ); /*\u6c42100\u4ee5\u5185\u52fe\u80a1\u6570*/ for ( a = 1 ; a <= 100 ; a ++ ) for ( b = a + 1 ; b <= 100 ; b ++ ) { c = ( int ) sqrt ( a * a + b * b ); /*\u6c42c\u503c*/ if ( c * c == a * a + b * b && a + b > c && a + c > b && b + c > a && c <= 100 ) /*\u5224\u65adc\u7684\u5e73\u65b9\u662f\u5426\u7b49\u4e8ea2+b2*/ { printf ( \"%4d %4d %4d \" , a , b , c ); count ++ ; if ( count % 4 == 0 ) /*\u6bcf\u8f93\u51fa4\u7ec4\u89e3\u5c31\u6362\u884c*/ printf ( \" \\n \" ); } } printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"guibing/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7528\u5f52\u5e76\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 695\u3001458\u3001362\u3001789\u300112\u3001 15\u3001163\u300123\u30012\u3001986\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 #include <stdio.h> int merge ( int r [], int s [], int x1 , int x2 , int x3 ) //\u81ea\u5b9a\u4e49\u5b9e\u73b0\u4e00\u6b21\u5f52\u5e76\u6837\u5e8f\u7684\u51fd\u6570 { int i , j , k ; i = x1 ; //\u7b2c\u4e00\u90e8\u5206\u7684\u5f00\u59cb\u4f4d\u7f6e j = x2 + 1 ; //\u7b2c\u4e8c\u90e8\u5206\u7684\u5f00\u59cb\u4f4d\u7f6e k = x1 ; while (( i <= x2 ) && ( j <= x3 )) //\u5f53i\u548cj\u90fd\u5728\u4e24\u4e2a\u8981\u5408\u5e76\u7684\u90e8\u5206\u4e2d\u65f6 if ( r [ i ] <= r [ j ]) //\u7b5b\u9009\u4e24\u90e8\u5206\u4e2d\u8f83\u5c0f\u7684\u5143\u7d20\u653e\u5230\u6570\u7ec4s\u4e2d { s [ k ] = r [ i ]; i ++ ; k ++ ; } else { s [ k ] = r [ j ]; j ++ ; k ++ ; } while ( i <= x2 ) //\u5c06x1\u301cx2\u8303\u56f4\u5185\u672a\u6bd4\u8f83\u7684\u6570\u987a\u6b21\u52a0\u5230\u6570\u7ec4r\u4e2d s [ k ++ ] = r [ i ++ ]; while ( j <= x3 ) //\u5c06x2+l\u301cx3\u8303\u56f4\u5185\u672a\u6bd4\u8f83\u7684\u6570\u987a\u6b21\u52a0\u5230\u6570\u7ec4r\u4e2d s [ k ++ ] = r [ j ++ ]; return 0 ; } int merge_sort ( int r [], int s [], int m , int n ) { int p ; int t [ 20 ]; if ( m == n ) s [ m ] = r [ m ]; else { p = ( m + n ) / 2 ; merge_sort ( r , t , m , p ); //\u9012\u5f52\u8c03\u7528merge_soit()\u51fd\u6570\u5c06r[m]\u301cr[p]\u5f52\u5e76\u6210\u6709\u5e8f\u7684t[m]\u301ct[p] merge_sort ( r , t , p + 1 , n ); //\u9012\u5f52\u4e00\u8c03\u7528merge_sort()\u51fd\u6570\u5c06r[p+l]\u301cr[n]\u5f52\u5e76\u6210\u6709\u5e8f\u7684t[p+l]\u301ct[n] merge ( t , s , m , p , n ); //\u8c03\u7528\u51fd\u6570\u5c06\u524d\u4e24\u90e8\u5206\u5f52\u5e76\u5230s[m]\u301cs[n\u3011*/ } return 0 ; } int main () { int a [ 11 ]; int i ; printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u6570 merge_sort ( a , a , 1 , 10 ); //\u8c03\u7528merge_sort()\u51fd\u6570\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u636e printf ( \" \\n \" ); return 0 ; }","title":"10.\u5f52\u5e76\u6392\u5e8f"},{"location":"guibing/#_1","text":"\u7528\u5f52\u5e76\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 695\u3001458\u3001362\u3001789\u300112\u3001 15\u3001163\u300123\u30012\u3001986\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"guibing/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 #include <stdio.h> int merge ( int r [], int s [], int x1 , int x2 , int x3 ) //\u81ea\u5b9a\u4e49\u5b9e\u73b0\u4e00\u6b21\u5f52\u5e76\u6837\u5e8f\u7684\u51fd\u6570 { int i , j , k ; i = x1 ; //\u7b2c\u4e00\u90e8\u5206\u7684\u5f00\u59cb\u4f4d\u7f6e j = x2 + 1 ; //\u7b2c\u4e8c\u90e8\u5206\u7684\u5f00\u59cb\u4f4d\u7f6e k = x1 ; while (( i <= x2 ) && ( j <= x3 )) //\u5f53i\u548cj\u90fd\u5728\u4e24\u4e2a\u8981\u5408\u5e76\u7684\u90e8\u5206\u4e2d\u65f6 if ( r [ i ] <= r [ j ]) //\u7b5b\u9009\u4e24\u90e8\u5206\u4e2d\u8f83\u5c0f\u7684\u5143\u7d20\u653e\u5230\u6570\u7ec4s\u4e2d { s [ k ] = r [ i ]; i ++ ; k ++ ; } else { s [ k ] = r [ j ]; j ++ ; k ++ ; } while ( i <= x2 ) //\u5c06x1\u301cx2\u8303\u56f4\u5185\u672a\u6bd4\u8f83\u7684\u6570\u987a\u6b21\u52a0\u5230\u6570\u7ec4r\u4e2d s [ k ++ ] = r [ i ++ ]; while ( j <= x3 ) //\u5c06x2+l\u301cx3\u8303\u56f4\u5185\u672a\u6bd4\u8f83\u7684\u6570\u987a\u6b21\u52a0\u5230\u6570\u7ec4r\u4e2d s [ k ++ ] = r [ j ++ ]; return 0 ; } int merge_sort ( int r [], int s [], int m , int n ) { int p ; int t [ 20 ]; if ( m == n ) s [ m ] = r [ m ]; else { p = ( m + n ) / 2 ; merge_sort ( r , t , m , p ); //\u9012\u5f52\u8c03\u7528merge_soit()\u51fd\u6570\u5c06r[m]\u301cr[p]\u5f52\u5e76\u6210\u6709\u5e8f\u7684t[m]\u301ct[p] merge_sort ( r , t , p + 1 , n ); //\u9012\u5f52\u4e00\u8c03\u7528merge_sort()\u51fd\u6570\u5c06r[p+l]\u301cr[n]\u5f52\u5e76\u6210\u6709\u5e8f\u7684t[p+l]\u301ct[n] merge ( t , s , m , p , n ); //\u8c03\u7528\u51fd\u6570\u5c06\u524d\u4e24\u90e8\u5206\u5f52\u5e76\u5230s[m]\u301cs[n\u3011*/ } return 0 ; } int main () { int a [ 11 ]; int i ; printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u6570 merge_sort ( a , a , 1 , 10 ); //\u8c03\u7528merge_sort()\u51fd\u6570\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u636e printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"haizipaobu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5f20\u3001\u738b\u3001\u674e\u4e09\u5bb6\u5404\u6709\u4e09\u4e2a\u5c0f\u5b69\u3002\u4e00\u5929\uff0c\u4e09\u5bb6\u7684\u4e5d\u4e2a\u5b69\u5b50\u5728\u4e00\u8d77\u6bd4\u8d5b\u77ed\u8dd1\uff0c\u89c4\u5b9a\u4e0d\u5206\u5e74\u9f84\u5927\u5c0f\uff0c\u8dd1\u7b2c\u4e00\u5f97 9 \u5206\uff0c\u8dd1\u7b2c\u4e8c\u5f97 8 \u5206\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002\u6bd4\u8d5b\u7ed3\u679c\u663e\u793a\u5404\u5bb6\u7684\u603b\u5206\u76f8\u540c\uff0c\u4e14\u8fd9\u4e9b\u5b69\u5b50\u6ca1\u6709\u540c\u65f6\u5230\u8fbe\u7ec8\u70b9\u7684\uff0c\u4e5f\u6ca1\u6709\u4e00\u5bb6\u7684\u4e24\u4e2a\u6216\u4e09\u4e2a\u5b69\u5b50\u83b7\u5f97\u76f8\u8fde\u7684\u540d\u6b21\u3002\u5df2\u77e5\u83b7\u7b2c\u4e00\u540d\u7684\u662f\u674e\u5bb6\u7684\u5b69\u5b50\uff0c\u83b7\u7b2c\u4e8c\u540d\u7684\u662f\u738b\u5bb6\u7684\u5b69\u5b50\u3002\u83b7\u5f97\u6700\u540e\u4e00\u540d\u7684\u662f\u8c01\u5bb6\u7684\u5b69\u5b50\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <stdio.h> int score [ 4 ][ 4 ]; int main () { int i , j , k , who ; score [ 1 ][ 1 ] = 7 ; score [ 2 ][ 1 ] = 8 ; score [ 3 ][ 1 ] = 9 ; for ( i = 4 ; i < 6 ; i ++ ) for ( j = 4 ; j < 7 ; j ++ ) for ( k = 4 ; i != j && k < 7 ; k ++ ) if ( k != i && k != j && 15 - i - score [ 1 ][ 1 ] != 15 - j - score [ 2 ][ 1 ] && 15 - i - score [ 1 ][ 1 ] != 15 - k - score [ 3 ][ 1 ] && 15 - j - score [ 2 ][ 1 ] != 15 - k - score [ 3 ][ 1 ]) { score [ 1 ][ 2 ] = i ; score [ 1 ][ 3 ] = 15 - i - 7 ; score [ 2 ][ 2 ] = j ; score [ 2 ][ 3 ] = 15 - j - 8 ; score [ 3 ][ 2 ] = k ; score [ 3 ][ 3 ] = 15 - k - 9 ; } for ( who = 0 , i = 1 ; i <= 3 ; i ++ , printf ( \" \\n \" )) for ( j = 1 ; j <= 3 ; j ++ ) { printf ( \"%d\" , score [ i ][ j ]); if ( score [ i ][ j ] == 1 ) who = i ; } if ( who == 1 ) printf ( \"\u6700\u540e\u4e00\u540d\u662f\u5f20\u5bb6\u5b69\u5b50 \\n \" ); else if ( who == 2 ) printf ( \"\u6700\u540e\u4e00\u540d\u662f\u738b\u5bb6\u5b69\u5b50 \\n \" ); else printf ( \"\u6700\u540e\u4e00\u540d\u662f\u674e\u5bb6\u5b69\u5b50 \\n \" ); return 0 ; }","title":"24.\u8c01\u5bb6\u5b69\u5b50\u8dd1\u7684\u6700\u6162"},{"location":"haizipaobu/#_1","text":"\u5f20\u3001\u738b\u3001\u674e\u4e09\u5bb6\u5404\u6709\u4e09\u4e2a\u5c0f\u5b69\u3002\u4e00\u5929\uff0c\u4e09\u5bb6\u7684\u4e5d\u4e2a\u5b69\u5b50\u5728\u4e00\u8d77\u6bd4\u8d5b\u77ed\u8dd1\uff0c\u89c4\u5b9a\u4e0d\u5206\u5e74\u9f84\u5927\u5c0f\uff0c\u8dd1\u7b2c\u4e00\u5f97 9 \u5206\uff0c\u8dd1\u7b2c\u4e8c\u5f97 8 \u5206\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002\u6bd4\u8d5b\u7ed3\u679c\u663e\u793a\u5404\u5bb6\u7684\u603b\u5206\u76f8\u540c\uff0c\u4e14\u8fd9\u4e9b\u5b69\u5b50\u6ca1\u6709\u540c\u65f6\u5230\u8fbe\u7ec8\u70b9\u7684\uff0c\u4e5f\u6ca1\u6709\u4e00\u5bb6\u7684\u4e24\u4e2a\u6216\u4e09\u4e2a\u5b69\u5b50\u83b7\u5f97\u76f8\u8fde\u7684\u540d\u6b21\u3002\u5df2\u77e5\u83b7\u7b2c\u4e00\u540d\u7684\u662f\u674e\u5bb6\u7684\u5b69\u5b50\uff0c\u83b7\u7b2c\u4e8c\u540d\u7684\u662f\u738b\u5bb6\u7684\u5b69\u5b50\u3002\u83b7\u5f97\u6700\u540e\u4e00\u540d\u7684\u662f\u8c01\u5bb6\u7684\u5b69\u5b50\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"haizipaobu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <stdio.h> int score [ 4 ][ 4 ]; int main () { int i , j , k , who ; score [ 1 ][ 1 ] = 7 ; score [ 2 ][ 1 ] = 8 ; score [ 3 ][ 1 ] = 9 ; for ( i = 4 ; i < 6 ; i ++ ) for ( j = 4 ; j < 7 ; j ++ ) for ( k = 4 ; i != j && k < 7 ; k ++ ) if ( k != i && k != j && 15 - i - score [ 1 ][ 1 ] != 15 - j - score [ 2 ][ 1 ] && 15 - i - score [ 1 ][ 1 ] != 15 - k - score [ 3 ][ 1 ] && 15 - j - score [ 2 ][ 1 ] != 15 - k - score [ 3 ][ 1 ]) { score [ 1 ][ 2 ] = i ; score [ 1 ][ 3 ] = 15 - i - 7 ; score [ 2 ][ 2 ] = j ; score [ 2 ][ 3 ] = 15 - j - 8 ; score [ 3 ][ 2 ] = k ; score [ 3 ][ 3 ] = 15 - k - 9 ; } for ( who = 0 , i = 1 ; i <= 3 ; i ++ , printf ( \" \\n \" )) for ( j = 1 ; j <= 3 ; j ++ ) { printf ( \"%d\" , score [ i ][ j ]); if ( score [ i ][ j ] == 1 ) who = i ; } if ( who == 1 ) printf ( \"\u6700\u540e\u4e00\u540d\u662f\u5f20\u5bb6\u5b69\u5b50 \\n \" ); else if ( who == 2 ) printf ( \"\u6700\u540e\u4e00\u540d\u662f\u738b\u5bb6\u5b69\u5b50 \\n \" ); else printf ( \"\u6700\u540e\u4e00\u540d\u662f\u674e\u5bb6\u5b69\u5b50 \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"hannuota/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6c49\u8bfa\u5854\u95ee\u9898\u662f\u6307\uff1a\u4e00\u5757\u677f\u4e0a\u6709\u4e09\u6839\u9488 A\u3001B\u3001C\u3002A \u9488\u4e0a\u5957\u6709 64 \u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u5706\u76d8\uff0c\u6309\u7167\u5927\u7684\u5728\u4e0b\u3001\u5c0f\u7684\u5728\u4e0a\u7684\u987a\u5e8f\u6392\u5217\uff0c\u8981\u628a\u8fd9 64 \u4e2a\u5706\u76d8\u4ece A \u9488\u79fb\u52a8\u5230 C \u9488\u4e0a\uff0c\u6bcf\u6b21\u53ea\u80fd\u79fb\u52a8\u4e00\u4e2a\u5706\u76d8\uff0c\u79fb\u52a8\u8fc7\u7a0b\u53ef\u4ee5\u501f\u52a9 B \u9488\u3002\u4f46\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u4efb\u4f55\u9488\u4e0a\u7684\u5706\u76d8\u90fd\u5fc5\u987b\u4fdd\u6301\u5927\u76d8\u5728\u4e0b\uff0c\u5c0f\u76d8\u5728\u4e0a\u3002\u4ece\u952e\u76d8\u8f93\u5165\u9700\u79fb\u52a8\u7684\u5706\u76d8\u4e2a\u6570\uff0c\u7ed9\u51fa\u79fb\u52a8\u7684\u8fc7\u7a0b\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <stdio.h> int main () { int hanoi ( int , char , char , char ); int n , counter ; printf ( \"Input the number of diskes\uff1a\" ); scanf ( \"%d\" , & n ); printf ( \" \\n \" ); counter = hanoi ( n , 'A' , 'B' , 'C' ); return 0 ; } int hanoi ( int n , char x , char y , char z ) { int move ( char , int , char ); if ( n == 1 ) move ( x , 1 , z ); else { hanoi ( n - 1 , x , z , y ); move ( x , n , z ); hanoi ( n - 1 , y , x , z ); } return 0 ; } int move ( char getone , int n , char putone ) { static int k = 1 ; printf ( \"%2d:%3d # %c---%c \\n \" , k , n , getone , putone ); if ( k ++% 3 == 0 ) printf ( \" \\n \" ); return 0 ; }","title":"35.\u6c49\u8bfa\u5854\u95ee\u9898"},{"location":"hannuota/#_1","text":"\u6c49\u8bfa\u5854\u95ee\u9898\u662f\u6307\uff1a\u4e00\u5757\u677f\u4e0a\u6709\u4e09\u6839\u9488 A\u3001B\u3001C\u3002A \u9488\u4e0a\u5957\u6709 64 \u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u5706\u76d8\uff0c\u6309\u7167\u5927\u7684\u5728\u4e0b\u3001\u5c0f\u7684\u5728\u4e0a\u7684\u987a\u5e8f\u6392\u5217\uff0c\u8981\u628a\u8fd9 64 \u4e2a\u5706\u76d8\u4ece A \u9488\u79fb\u52a8\u5230 C \u9488\u4e0a\uff0c\u6bcf\u6b21\u53ea\u80fd\u79fb\u52a8\u4e00\u4e2a\u5706\u76d8\uff0c\u79fb\u52a8\u8fc7\u7a0b\u53ef\u4ee5\u501f\u52a9 B \u9488\u3002\u4f46\u5728\u4efb\u4f55\u65f6\u5019\uff0c\u4efb\u4f55\u9488\u4e0a\u7684\u5706\u76d8\u90fd\u5fc5\u987b\u4fdd\u6301\u5927\u76d8\u5728\u4e0b\uff0c\u5c0f\u76d8\u5728\u4e0a\u3002\u4ece\u952e\u76d8\u8f93\u5165\u9700\u79fb\u52a8\u7684\u5706\u76d8\u4e2a\u6570\uff0c\u7ed9\u51fa\u79fb\u52a8\u7684\u8fc7\u7a0b\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"hannuota/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <stdio.h> int main () { int hanoi ( int , char , char , char ); int n , counter ; printf ( \"Input the number of diskes\uff1a\" ); scanf ( \"%d\" , & n ); printf ( \" \\n \" ); counter = hanoi ( n , 'A' , 'B' , 'C' ); return 0 ; } int hanoi ( int n , char x , char y , char z ) { int move ( char , int , char ); if ( n == 1 ) move ( x , 1 , z ); else { hanoi ( n - 1 , x , z , y ); move ( x , n , z ); hanoi ( n - 1 , y , x , z ); } return 0 ; } int move ( char getone , int n , char putone ) { static int k = 1 ; printf ( \"%2d:%3d # %c---%c \\n \" , k , n , getone , putone ); if ( k ++% 3 == 0 ) printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"houzichitao/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7334\u5b50\u5403\u6843\u95ee\u9898\uff1a\u7334\u5b50\u7b2c\u4e00\u5929\u6458\u4e0b\u82e5\u5e72\u4e2a\u6843\u5b50\uff0c\u5f53\u5373\u5403\u4e86\u4e00\u534a\uff0c\u8fd8\u4e0d\u8fc7\u763e\uff0c\u53c8\u591a\u5403\u4e86\u4e00\u4e2a\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\u53c8\u5c06\u7b2c\u4e00\u5929\u5269\u4e0b\u7684\u6843\u5b50\u5403\u6389\u4e00\u534a\uff0c\u6709\u591a\u5403\u4e86\u4e00\u4e2a\u3002\u4ee5\u540e\u6bcf\u5929\u65e9\u4e0a\u90fd\u5403\u4e86\u524d\u4e00\u5929\u5269\u4e0b\u7684\u4e00\u534a\u96f6\u4e00\u4e2a\u3002\u5230\u7b2c 10 \u5929\u65e9\u4e0a\u60f3\u518d\u5403\u65f6\uff0c\u53d1\u73b0\u53ea\u5269\u4e0b\u4e00\u4e2a\u6843\u5b50\u4e86\u3002\u7f16\u5199\u7a0b\u5e8f\u6c42\u7334\u5b50\u7b2c\u4e00\u5929\u6458\u4e86\u591a\u5c11\u4e2a\u6843\u5b50\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main () { intday , x1 , x2 ; /*\u5b9a\u4e49 day\u3001x1\u3001x2 3 \u4e2a\u53d8\u8463\u4e3a\u57fa\u672c\u6574\u578b*/ day = 9 ; x2 = 1 ; while ( day > 0 ) { x1 = ( x2 + 1 ) * 2 ; /*\u7b2c\u4e00\u5929\u7684\u6843\u5b50\u6570\u662f\u7b2c\u4e8c\u5929\u6843\u5b50\u6570\u52a01\u540e\u76842\u500d*/ x2 = x1 ; day -- ; /*\u56e0\u4e3a\u4ece\u540e\u5411\u524d\u63a8\u6240\u4ee5\u5929\u6570\u9012\u51cf*/ } printf ( \"the total is %d \\n \" , x1 ); /* \u8f93\u51fa\u6843\u5b50\u7684\u603b\u6570*/ return 0 ; }","title":"2.\u7334\u5b50\u5403\u6843"},{"location":"houzichitao/#_1","text":"\u7334\u5b50\u5403\u6843\u95ee\u9898\uff1a\u7334\u5b50\u7b2c\u4e00\u5929\u6458\u4e0b\u82e5\u5e72\u4e2a\u6843\u5b50\uff0c\u5f53\u5373\u5403\u4e86\u4e00\u534a\uff0c\u8fd8\u4e0d\u8fc7\u763e\uff0c\u53c8\u591a\u5403\u4e86\u4e00\u4e2a\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\u53c8\u5c06\u7b2c\u4e00\u5929\u5269\u4e0b\u7684\u6843\u5b50\u5403\u6389\u4e00\u534a\uff0c\u6709\u591a\u5403\u4e86\u4e00\u4e2a\u3002\u4ee5\u540e\u6bcf\u5929\u65e9\u4e0a\u90fd\u5403\u4e86\u524d\u4e00\u5929\u5269\u4e0b\u7684\u4e00\u534a\u96f6\u4e00\u4e2a\u3002\u5230\u7b2c 10 \u5929\u65e9\u4e0a\u60f3\u518d\u5403\u65f6\uff0c\u53d1\u73b0\u53ea\u5269\u4e0b\u4e00\u4e2a\u6843\u5b50\u4e86\u3002\u7f16\u5199\u7a0b\u5e8f\u6c42\u7334\u5b50\u7b2c\u4e00\u5929\u6458\u4e86\u591a\u5c11\u4e2a\u6843\u5b50\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"houzichitao/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main () { intday , x1 , x2 ; /*\u5b9a\u4e49 day\u3001x1\u3001x2 3 \u4e2a\u53d8\u8463\u4e3a\u57fa\u672c\u6574\u578b*/ day = 9 ; x2 = 1 ; while ( day > 0 ) { x1 = ( x2 + 1 ) * 2 ; /*\u7b2c\u4e00\u5929\u7684\u6843\u5b50\u6570\u662f\u7b2c\u4e8c\u5929\u6843\u5b50\u6570\u52a01\u540e\u76842\u500d*/ x2 = x1 ; day -- ; /*\u56e0\u4e3a\u4ece\u540e\u5411\u524d\u63a8\u6240\u4ee5\u5929\u6570\u9012\u51cf*/ } printf ( \"the total is %d \\n \" , x1 ); /* \u8f93\u51fa\u6843\u5b50\u7684\u603b\u6570*/ return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"huiwen/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4efb\u610f\u7684\u6574\u6570\uff0c\u5f53\u4ece\u5de6\u5411\u53f3\u8bfb\u4e0e\u4ece\u53f3\u5411\u5de6\u8bfb\u662f\u76f8\u540c\u7684\uff0c\u4e14\u4e3a\u7d20\u6570\u65f6\uff0c\u79f0\u4e3a\u56de\u6587\u7d20\u6570\u3002\u6c42 1000 \u4ee5\u5185\u7684\u6240\u6709\u56de\u6587\u7d20\u6570\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <stdio.h> int sushu ( int i ) { int j ; if ( i <= 1 ) return 0 ; if ( i == 2 ) return 1 ; for ( j = 2 ; j < i ; j ++ ) { if ( i % j == 0 ) return 0 ; else if ( i != j + 1 ) continue ; else return 1 ; } } int main () { int i ; for ( i = 10 ; i < 1000 ; i ++ ) if ( sushu ( i ) == 1 ) if ( i / 100 == 0 ) { if ( i / 10 == i % 10 ) printf ( \"%5d\" , i ); if ( i % 5 == 0 ) printf ( \" \\n \" ); } else if ( i / 100 == i % 10 ) printf ( \"%5d\" , i ); if ( i % 5 == 0 ) printf ( \" \\n \" ); return 0 ; }","title":"19.\u6c42\u56de\u6587\u7d20\u6570"},{"location":"huiwen/#_1","text":"\u4efb\u610f\u7684\u6574\u6570\uff0c\u5f53\u4ece\u5de6\u5411\u53f3\u8bfb\u4e0e\u4ece\u53f3\u5411\u5de6\u8bfb\u662f\u76f8\u540c\u7684\uff0c\u4e14\u4e3a\u7d20\u6570\u65f6\uff0c\u79f0\u4e3a\u56de\u6587\u7d20\u6570\u3002\u6c42 1000 \u4ee5\u5185\u7684\u6240\u6709\u56de\u6587\u7d20\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"huiwen/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <stdio.h> int sushu ( int i ) { int j ; if ( i <= 1 ) return 0 ; if ( i == 2 ) return 1 ; for ( j = 2 ; j < i ; j ++ ) { if ( i % j == 0 ) return 0 ; else if ( i != j + 1 ) continue ; else return 1 ; } } int main () { int i ; for ( i = 10 ; i < 1000 ; i ++ ) if ( sushu ( i ) == 1 ) if ( i / 100 == 0 ) { if ( i / 10 == i % 10 ) printf ( \"%5d\" , i ); if ( i % 5 == 0 ) printf ( \" \\n \" ); } else if ( i / 100 == i % 10 ) printf ( \"%5d\" , i ); if ( i % 5 == 0 ) printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"jiami/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5728\u672c\u5b9e\u4f8b\u4e2d\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2a\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u3002\u5728\u5bf9\u4e00\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u52a0\u5bc6\u4e4b\u540e\uff0c\u5229\u7528\u89e3\u5bc6\u51fd\u6570\u80fd\u591f\u5bf9\u5bc6\u6587\u89e3\u5bc6\uff0c\u663e\u793a\u660e\u6587\u4fe1\u606f\u3002\u52a0\u5bc6\u7684\u65b9\u5f0f\u662f\u5c06\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u52a0\u4e0a\u5b83\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u548c\u4e00\u4e2a\u504f\u79fb\u503c 5\u3002\u4ee5\u5b57\u7b26\u4e32\u201cmrsoft\u201d\u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u201cm\u201d\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u4e3a 0\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u5bc6\u6587\u662f\u201c'm'+0+5\"\uff0c\u5373 r\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <stdio.h> #include <string.h> int main () { int result = 1 ; int i ; int count = 0 ; char Text [ 128 ] = { '\\0' }; char cryptograph [ 128 ] = { '\\0' }; while ( 1 ) { if ( result == 1 ) { printf ( \"\u8bf7\u8f93\u5165\u8981\u52a0\u5bc6\u7684\u660e\u6587\uff1a \\n \" ); scanf ( \"%s\" , & Text ); count = strlen ( Text ); for ( i = 0 ; i < count ; i ++ ) { cryptograph [ i ] = Text [ i ] + i + 5 ; } cryptograph [ i ] = '\\0' ; printf ( \"\u52a0\u5bc6\u540e\u7684\u5bc6\u6587\u662f\uff1a%s \\n \" , cryptograph ); } else if ( result == 2 ) { count = strlen ( Text ); for ( i = 0 ; i < count ; i ++ ) { Text [ i ] = cryptograph [ i ] - i - 5 ; } Text [ i ] = '\\0' ; printf ( \"\u89e3\u5bc6\u540e\u7684\u660e\u6587\u662f\uff1a%s \\n \" , Text ); } else if ( result == 3 ) { break ; } else { printf ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u547d\u4ee4\u7b26\uff1a \\n \" ); } printf ( \"\u8f93\u51651\u52a0\u5bc6\u65b0\u7684\u660e\u6587\uff0c\u8f93\u51652\u5bf9\u521a\u52a0\u5bc6\u7684\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u8f93\u51653\u9000\u51fa\u7cfb\u7edf\uff1a \\n \" ); printf ( \"\u8bf7\u8f93\u5165\u547d\u4ee4\u7b26\uff1a \\n \" ); scanf ( \"%d\" , & result ); } return 0 ; }","title":"27.\u5b57\u7b26\u4e32\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5"},{"location":"jiami/#_1","text":"\u5728\u672c\u5b9e\u4f8b\u4e2d\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2a\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u3002\u5728\u5bf9\u4e00\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u52a0\u5bc6\u4e4b\u540e\uff0c\u5229\u7528\u89e3\u5bc6\u51fd\u6570\u80fd\u591f\u5bf9\u5bc6\u6587\u89e3\u5bc6\uff0c\u663e\u793a\u660e\u6587\u4fe1\u606f\u3002\u52a0\u5bc6\u7684\u65b9\u5f0f\u662f\u5c06\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u52a0\u4e0a\u5b83\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u548c\u4e00\u4e2a\u504f\u79fb\u503c 5\u3002\u4ee5\u5b57\u7b26\u4e32\u201cmrsoft\u201d\u4e3a\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u201cm\u201d\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u4e3a 0\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u5bc6\u6587\u662f\u201c'm'+0+5\"\uff0c\u5373 r\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"jiami/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <stdio.h> #include <string.h> int main () { int result = 1 ; int i ; int count = 0 ; char Text [ 128 ] = { '\\0' }; char cryptograph [ 128 ] = { '\\0' }; while ( 1 ) { if ( result == 1 ) { printf ( \"\u8bf7\u8f93\u5165\u8981\u52a0\u5bc6\u7684\u660e\u6587\uff1a \\n \" ); scanf ( \"%s\" , & Text ); count = strlen ( Text ); for ( i = 0 ; i < count ; i ++ ) { cryptograph [ i ] = Text [ i ] + i + 5 ; } cryptograph [ i ] = '\\0' ; printf ( \"\u52a0\u5bc6\u540e\u7684\u5bc6\u6587\u662f\uff1a%s \\n \" , cryptograph ); } else if ( result == 2 ) { count = strlen ( Text ); for ( i = 0 ; i < count ; i ++ ) { Text [ i ] = cryptograph [ i ] - i - 5 ; } Text [ i ] = '\\0' ; printf ( \"\u89e3\u5bc6\u540e\u7684\u660e\u6587\u662f\uff1a%s \\n \" , Text ); } else if ( result == 3 ) { break ; } else { printf ( \"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u547d\u4ee4\u7b26\uff1a \\n \" ); } printf ( \"\u8f93\u51651\u52a0\u5bc6\u65b0\u7684\u660e\u6587\uff0c\u8f93\u51652\u5bf9\u521a\u52a0\u5bc6\u7684\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\uff0c\u8f93\u51653\u9000\u51fa\u7cfb\u7edf\uff1a \\n \" ); printf ( \"\u8bf7\u8f93\u5165\u547d\u4ee4\u7b26\uff1a \\n \" ); scanf ( \"%d\" , & result ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"jiecheng/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4ece\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u6c42\u51fa\u8fd9\u4e2a\u6570\u7684\u9636\u4e58\uff0c\u5373 n!\u3002 \u4ee3\u7801\u5b9e\u73b0 \u00b6 1.\u9012\u5f52 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <stdio.h> #include <stdlib.h> int f ( int n ){ if ( n == 0 ) return 1 ; else return n * f ( n - 1 ); } int main (){ int n ; printf ( \"\u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:\" ); scanf ( \"%d\" , & n ); printf ( \"\u7ed3\u679c\u4e3a:%d\" , f ( n )); return 0 ; } 2.\u975e\u9012\u5f52 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> #include <stdlib.h> int main (){ int n , i , sum = 1 ; printf ( \"\u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:\" ); scanf ( \"%d\" , & n ); for ( i = n ; i > 0 ; i -- ){ sum *= i ; } printf ( \"\u7ed3\u679c\u4e3a:%d\" , sum ); return 0 ; } \u7ed3\u679c\u8f93\u51fa \u00b6 1 2 3 4 5 \u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:5 \u7ed3\u679c\u4e3a:120 -------------------------------- Process exited after 1.614 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"13.n\u7684\u9636\u4e58"},{"location":"jiecheng/#_1","text":"\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u6c42\u51fa\u8fd9\u4e2a\u6570\u7684\u9636\u4e58\uff0c\u5373 n!\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"jiecheng/#_2","text":"","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"jiecheng/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <stdio.h> #include <stdlib.h> int f ( int n ){ if ( n == 0 ) return 1 ; else return n * f ( n - 1 ); } int main (){ int n ; printf ( \"\u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:\" ); scanf ( \"%d\" , & n ); printf ( \"\u7ed3\u679c\u4e3a:%d\" , f ( n )); return 0 ; }","title":"1.\u9012\u5f52"},{"location":"jiecheng/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> #include <stdlib.h> int main (){ int n , i , sum = 1 ; printf ( \"\u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:\" ); scanf ( \"%d\" , & n ); for ( i = n ; i > 0 ; i -- ){ sum *= i ; } printf ( \"\u7ed3\u679c\u4e3a:%d\" , sum ); return 0 ; }","title":"2.\u975e\u9012\u5f52"},{"location":"jiecheng/#_3","text":"1 2 3 4 5 \u8bf7\u8f93\u5165\u4f60\u8981\u8fdb\u884c\u9636\u4e58\u7684\u6570:5 \u7ed3\u679c\u4e3a:120 -------------------------------- Process exited after 1.614 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"\u7ed3\u679c\u8f93\u51fa"},{"location":"jiujiu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4e5d\u4e5d\u4e58\u6cd5\u8868\u5171 9 \u884c 9 \u5217 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 #include <stdio.h> int main () { int i , j ; // i, j\u63a7\u5236\u884c\u6216\u5217 for ( i = 1 ; i <= 9 ; i ++ ) { for ( j = 1 ; j <= 9 ; j ++ ) // %2d \u63a7\u5236\u5bbd\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\uff0c\u4e14\u53f3\u5bf9\u9f50\uff1b\u5982\u679c\u6539\u4e3a %-2d \u5219\u4e3a\u5de6\u5bf9\u9f50 // \\t\u4e3atab\u7f29\u8fdb printf ( \"%d*%d=%2d \\t \" , i , j , i * j ); printf ( \" \\n \" ); } return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main () { int i , j ; for ( i = 1 ; i <= 9 ; i ++ ){ for ( j = 1 ; j <= 9 ; j ++ ){ if ( j < i ) //\u6253\u5370\u516b\u4e2a\u7a7a\u683c\uff0c\u53bb\u6389\u7a7a\u683c\u5c31\u662f\u5de6\u4e0a\u4e09\u89d2\u5f62 printf ( \" \" ); else printf ( \"%d*%d=%2d \" , i , j , i * j ); } printf ( \" \\n \" ); } return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main (){ int i , j , n ; for ( i = 1 ; i <= 9 ; i ++ ){ // \u5c06\u4e0b\u9762\u7684for\u5faa\u73af\u6ce8\u91ca\u6389\uff0c\u5c31\u8f93\u51fa\u5de6\u4e0b\u4e09\u89d2\u5f62 for ( n = 1 ; n <= 9 - i ; n ++ ) printf ( \" \" ); for ( j = 1 ; j <= i ; j ++ ) printf ( \"%d*%d=%2d \" , i , j , i * j ); printf ( \" \\n \" ); } return 0 ; }","title":"36.\u4e5d\u4e5d\u4e58\u6cd5\u8868"},{"location":"jiujiu/#_1","text":"\u4e5d\u4e5d\u4e58\u6cd5\u8868\u5171 9 \u884c 9 \u5217","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"jiujiu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 #include <stdio.h> int main () { int i , j ; // i, j\u63a7\u5236\u884c\u6216\u5217 for ( i = 1 ; i <= 9 ; i ++ ) { for ( j = 1 ; j <= 9 ; j ++ ) // %2d \u63a7\u5236\u5bbd\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\uff0c\u4e14\u53f3\u5bf9\u9f50\uff1b\u5982\u679c\u6539\u4e3a %-2d \u5219\u4e3a\u5de6\u5bf9\u9f50 // \\t\u4e3atab\u7f29\u8fdb printf ( \"%d*%d=%2d \\t \" , i , j , i * j ); printf ( \" \\n \" ); } return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main () { int i , j ; for ( i = 1 ; i <= 9 ; i ++ ){ for ( j = 1 ; j <= 9 ; j ++ ){ if ( j < i ) //\u6253\u5370\u516b\u4e2a\u7a7a\u683c\uff0c\u53bb\u6389\u7a7a\u683c\u5c31\u662f\u5de6\u4e0a\u4e09\u89d2\u5f62 printf ( \" \" ); else printf ( \"%d*%d=%2d \" , i , j , i * j ); } printf ( \" \\n \" ); } return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <stdio.h> int main (){ int i , j , n ; for ( i = 1 ; i <= 9 ; i ++ ){ // \u5c06\u4e0b\u9762\u7684for\u5faa\u73af\u6ce8\u91ca\u6389\uff0c\u5c31\u8f93\u51fa\u5de6\u4e0b\u4e09\u89d2\u5f62 for ( n = 1 ; n <= 9 - i ; n ++ ) printf ( \" \" ); for ( j = 1 ; j <= i ; j ++ ) printf ( \"%d*%d=%2d \" , i , j , i * j ); printf ( \" \\n \" ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"juzhencaozuo/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u672c\u5b9e\u4f8b\u8981\u6c42\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u5c06\u4e00\u4e2a 3\u00d74 \u7684\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u503c\u53ca\u5176\u4e0b\u6807\u83b7\u53d6\uff0c\u901a\u8fc7\u8be5\u7a0b\u5e8f\uff0c\u638c\u63e1\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f15\u7528\u77e5\u8bc6\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int a [ 3 ][ 4 ], i , j , max , max_i = 0 , max_j = 0 ; for ( i = 0 ; i < 3 ; i ++ ) for ( j = 0 ; j < 4 ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); max = a [ 0 ][ 0 ]; for ( i = 0 ; i < 3 ; i ++ ) for ( j = 0 ; j < 4 ; j ++ ) if ( a [ i ][ j ] > max ) { max = a [ i ][ j ]; max_i = i ; max_j = j ; } printf ( \"max=a[%d][%d]=%d \\n \" , max_i , max_j , max ); return 0 ; }","title":"25.\u83b7\u53d6\u77e9\u9635\u7684\u6700\u5927\u503c\u53ca\u4e0b\u6807"},{"location":"juzhencaozuo/#_1","text":"\u672c\u5b9e\u4f8b\u8981\u6c42\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u5c06\u4e00\u4e2a 3\u00d74 \u7684\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u503c\u53ca\u5176\u4e0b\u6807\u83b7\u53d6\uff0c\u901a\u8fc7\u8be5\u7a0b\u5e8f\uff0c\u638c\u63e1\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f15\u7528\u77e5\u8bc6\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"juzhencaozuo/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int a [ 3 ][ 4 ], i , j , max , max_i = 0 , max_j = 0 ; for ( i = 0 ; i < 3 ; i ++ ) for ( j = 0 ; j < 4 ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); max = a [ 0 ][ 0 ]; for ( i = 0 ; i < 3 ; i ++ ) for ( j = 0 ; j < 4 ; j ++ ) if ( a [ i ][ j ] > max ) { max = a [ i ][ j ]; max_i = i ; max_j = j ; } printf ( \"max=a[%d][%d]=%d \\n \" , max_i , max_j , max ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"juzhenzhuanzhi/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u672c\u5b9e\u4f8b\u662f\u5229\u7528\u6570\u7ec4\u89e3\u51b3\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u77e9\u9635\u8f6c\u7f6e\u95ee\u9898\u3002 \u8bbe\u6709\u4e00\u77e9\u9635\u4e3a m\u00d7n \u9636\uff08\u5373 m \u884c n \u5217\uff09\uff0c\u7b2c i \u884c j \u5217\u7684\u5143\u7d20\u662f a(i,j)\uff0c\u9700\u8981\u5c06\u8be5\u77e9\u9635\u8f6c\u7f6e\u4e3a n\u00d7m \u9636\u7684\u77e9\u9635\uff0c\u4f7f\u5176\u4e2d\u5143\u7d20\u6ee1\u8db3 b(j,i)=a(i,j)\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <stdio.h> int main () { int i , j , i1 , j1 , a [ 101 ][ 101 ], b [ 101 ][ 101 ]; printf ( \"please input the number of rows(<=100) \\n \" ); scanf ( \"%d\" , & i1 ); printf ( \"please input the number of columns(<=100) \\n \" ); scanf ( \"%d\" , & j1 ); printf ( \"please input the element \\n \" ); for ( i = 0 ; i < i1 ; i ++ ) for ( j = 0 ; j < j1 ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); printf ( \"array a\uff1a \\n \" ); for ( i = 0 ; i < i1 ; i ++ ) { for ( j = 0 ; j < j1 ; j ++ ) printf ( \" \\t %d\" , a [ i ][ j ]); printf ( \" \\n \" ); } for ( i = 0 ; i < i1 ; i ++ ) for ( j = 0 ; j < j1 ; j ++ ) b [ j ][ i ] = a [ i ][ j ]; printf ( \"array b\uff1a \\n \" ); for ( i = 0 ; i < j1 ; i ++ ) { for ( j = 0 ; j < i1 ; j ++ ) printf ( \" \\t %d\" , b [ i ][ j ]); printf ( \" \\n \" ); } return 0 ; }","title":"21.\u77e9\u9635\u8f6c\u7f6e"},{"location":"juzhenzhuanzhi/#_1","text":"\u672c\u5b9e\u4f8b\u662f\u5229\u7528\u6570\u7ec4\u89e3\u51b3\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u77e9\u9635\u8f6c\u7f6e\u95ee\u9898\u3002 \u8bbe\u6709\u4e00\u77e9\u9635\u4e3a m\u00d7n \u9636\uff08\u5373 m \u884c n \u5217\uff09\uff0c\u7b2c i \u884c j \u5217\u7684\u5143\u7d20\u662f a(i,j)\uff0c\u9700\u8981\u5c06\u8be5\u77e9\u9635\u8f6c\u7f6e\u4e3a n\u00d7m \u9636\u7684\u77e9\u9635\uff0c\u4f7f\u5176\u4e2d\u5143\u7d20\u6ee1\u8db3 b(j,i)=a(i,j)\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"juzhenzhuanzhi/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <stdio.h> int main () { int i , j , i1 , j1 , a [ 101 ][ 101 ], b [ 101 ][ 101 ]; printf ( \"please input the number of rows(<=100) \\n \" ); scanf ( \"%d\" , & i1 ); printf ( \"please input the number of columns(<=100) \\n \" ); scanf ( \"%d\" , & j1 ); printf ( \"please input the element \\n \" ); for ( i = 0 ; i < i1 ; i ++ ) for ( j = 0 ; j < j1 ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); printf ( \"array a\uff1a \\n \" ); for ( i = 0 ; i < i1 ; i ++ ) { for ( j = 0 ; j < j1 ; j ++ ) printf ( \" \\t %d\" , a [ i ][ j ]); printf ( \" \\n \" ); } for ( i = 0 ; i < i1 ; i ++ ) for ( j = 0 ; j < j1 ; j ++ ) b [ j ][ i ] = a [ i ][ j ]; printf ( \"array b\uff1a \\n \" ); for ( i = 0 ; i < j1 ; i ++ ) { for ( j = 0 ; j < i1 ; j ++ ) printf ( \" \\t %d\" , b [ i ][ j ]); printf ( \" \\n \" ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"kuaisu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7528\u5feb\u901f\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 99\u300145\u300112\u300136\u300169\u300122\u300162\u3001 796\u30014\u3001696\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <stdio.h> int qusort ( int s [], int start , int end ) //\u81ea\u5b9a\u4e49\u51fd\u6570 qusort() { int i , j ; //\u5b9a\u4e49\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b i = start ; //\u5c06\u6bcf\u7ec4\u9996\u4e2a\u5143\u7d20\u8d4b\u7ed9i j = end ; //\u5c06\u6bcf\u7ec4\u672b\u5c3e\u5143\u7d20\u8d4b\u7ed9j s [ 0 ] = s [ start ]; //\u8bbe\u7f6e\u57fa\u51c6\u503c while ( i < j ) { while ( i < j && s [ 0 ] < s [ j ]) j -- ; //\u4f4d\u7f6e\u5de6\u79fb if ( i < j ) { s [ i ] = s [ j ]; //\u5c06s[j]\u653e\u5230s[i]\u7684\u4f4d\u7f6e\u4e0a i ++ ; //\u4f4d\u7f6e\u53f3\u79fb } while ( i < j && s [ i ] <= s [ 0 ]) i ++ ; //\u4f4d\u7f6e\u5de6\u79fb if ( i < j ) { s [ j ] = s [ i ]; //\u5c06\u5927\u4e8e\u57fa\u51c6\u503c\u7684s[j]\u653e\u5230s[i]\u4f4d\u7f6e j -- ; //\u4f4d\u7f6e\u5de6\u79fb } } s [ i ] = s [ 0 ]; //\u5c06\u57fa\u51c6\u503c\u653e\u5165\u6307\u5b9a\u4f4d\u7f6e if ( start < i ) qusort ( s , start , j - 1 ); //\u5bf9\u5206\u5272\u51fa\u7684\u90e8\u5206\u9012\u5f52\u8c03\u7528qusort()\u51fd\u6570 if ( i < end ) qusort ( s , j + 1 , end ); return 0 ; } int main () { int a [ 11 ], i ; //\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u8981\u8fdb\u884c\u6392\u5e8f\u7684\u6570 qusort ( a , 1 , 10 ); //\u8c03\u7528qusort()\u51fd\u6570\u8fdb\u884c\u6392\u5e8f printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u597d\u5e8f\u7684\u6570\u7ec4 printf ( \" \\n \" ); return 0 ; }","title":"8.\u5feb\u901f\u6392\u5e8f"},{"location":"kuaisu/#_1","text":"\u7528\u5feb\u901f\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 99\u300145\u300112\u300136\u300169\u300122\u300162\u3001 796\u30014\u3001696\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"kuaisu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <stdio.h> int qusort ( int s [], int start , int end ) //\u81ea\u5b9a\u4e49\u51fd\u6570 qusort() { int i , j ; //\u5b9a\u4e49\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b i = start ; //\u5c06\u6bcf\u7ec4\u9996\u4e2a\u5143\u7d20\u8d4b\u7ed9i j = end ; //\u5c06\u6bcf\u7ec4\u672b\u5c3e\u5143\u7d20\u8d4b\u7ed9j s [ 0 ] = s [ start ]; //\u8bbe\u7f6e\u57fa\u51c6\u503c while ( i < j ) { while ( i < j && s [ 0 ] < s [ j ]) j -- ; //\u4f4d\u7f6e\u5de6\u79fb if ( i < j ) { s [ i ] = s [ j ]; //\u5c06s[j]\u653e\u5230s[i]\u7684\u4f4d\u7f6e\u4e0a i ++ ; //\u4f4d\u7f6e\u53f3\u79fb } while ( i < j && s [ i ] <= s [ 0 ]) i ++ ; //\u4f4d\u7f6e\u5de6\u79fb if ( i < j ) { s [ j ] = s [ i ]; //\u5c06\u5927\u4e8e\u57fa\u51c6\u503c\u7684s[j]\u653e\u5230s[i]\u4f4d\u7f6e j -- ; //\u4f4d\u7f6e\u5de6\u79fb } } s [ i ] = s [ 0 ]; //\u5c06\u57fa\u51c6\u503c\u653e\u5165\u6307\u5b9a\u4f4d\u7f6e if ( start < i ) qusort ( s , start , j - 1 ); //\u5bf9\u5206\u5272\u51fa\u7684\u90e8\u5206\u9012\u5f52\u8c03\u7528qusort()\u51fd\u6570 if ( i < end ) qusort ( s , j + 1 , end ); return 0 ; } int main () { int a [ 11 ], i ; //\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u8981\u8fdb\u884c\u6392\u5e8f\u7684\u6570 qusort ( a , 1 , 10 ); //\u8c03\u7528qusort()\u51fd\u6570\u8fdb\u884c\u6392\u5e8f printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u597d\u5e8f\u7684\u6570\u7ec4 printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"lingxing/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u603b\u884c\u6570\uff0c\u6253\u5370\u51fa\u83f1\u5f62(\u603b\u884c\u6570\u4e0e\u603b\u5217\u6570\u76f8\u7b49)\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <stdio.h> #include <stdlib.h> int main (){ int line ; // \u83f1\u5f62\u603b\u884c\u6570 int column ; // \u83f1\u5f62\u603b\u5217\u6570 int i ; // \u5f53\u524d\u884c int j ; // \u5f53\u524d\u5217 printf ( \"\u8bf7\u8f93\u5165\u83f1\u5f62\u7684\u884c\u6570(\u5947\u6570)\uff1a\" ); scanf ( \"%d\" , & line ); if ( line % 2 == 0 ){ // \u5224\u65ad\u662f\u5426\u662f\u5947\u6570 printf ( \"\u5fc5\u987b\u8f93\u5165\u5947\u6570\uff01 \\n \" ); exit ( 1 ); } column = line ; // \u603b\u884c\u6570\u548c\u603b\u5217\u6570\u76f8\u540c for ( i = 1 ; i <= line ; i ++ ){ // \u904d\u5386\u6240\u6709\u884c if ( i < ( line + 1 ) / 2 + 1 ){ // \u4e0a\u534a\u90e8\u5206\uff08\u5305\u62ec\u4e2d\u95f4\u4e00\u884c\uff09 for ( j = 1 ; j <= column ; j ++ ){ // \u904d\u5386\u4e0a\u534a\u90e8\u5206\u7684\u6240\u6709\u5217 if ( ( column + 1 ) / 2 - ( i - 1 ) <= j && j <= ( column + 1 ) / 2 + ( i - 1 ) ){ printf ( \"*\" ); } else { printf ( \" \" ); } } } else { // \u4e0b\u534a\u90e8\u5206 for ( j = 1 ; j <= column ; j ++ ){ // \u904d\u5386\u4e0b\u534a\u90e8\u5206\u7684\u6240\u6709\u5217 if ( ( column + 1 ) / 2 - ( line - i ) <= j && j <= ( column + 1 ) / 2 + ( line - i ) ){ printf ( \"*\" ); } else { printf ( \" \" ); } } } printf ( \" \\n \" ); } return 0 ; }","title":"40.\u8f93\u51fa\u83f1\u5f62"},{"location":"lingxing/#_1","text":"\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u603b\u884c\u6570\uff0c\u6253\u5370\u51fa\u83f1\u5f62(\u603b\u884c\u6570\u4e0e\u603b\u5217\u6570\u76f8\u7b49)\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lingxing/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <stdio.h> #include <stdlib.h> int main (){ int line ; // \u83f1\u5f62\u603b\u884c\u6570 int column ; // \u83f1\u5f62\u603b\u5217\u6570 int i ; // \u5f53\u524d\u884c int j ; // \u5f53\u524d\u5217 printf ( \"\u8bf7\u8f93\u5165\u83f1\u5f62\u7684\u884c\u6570(\u5947\u6570)\uff1a\" ); scanf ( \"%d\" , & line ); if ( line % 2 == 0 ){ // \u5224\u65ad\u662f\u5426\u662f\u5947\u6570 printf ( \"\u5fc5\u987b\u8f93\u5165\u5947\u6570\uff01 \\n \" ); exit ( 1 ); } column = line ; // \u603b\u884c\u6570\u548c\u603b\u5217\u6570\u76f8\u540c for ( i = 1 ; i <= line ; i ++ ){ // \u904d\u5386\u6240\u6709\u884c if ( i < ( line + 1 ) / 2 + 1 ){ // \u4e0a\u534a\u90e8\u5206\uff08\u5305\u62ec\u4e2d\u95f4\u4e00\u884c\uff09 for ( j = 1 ; j <= column ; j ++ ){ // \u904d\u5386\u4e0a\u534a\u90e8\u5206\u7684\u6240\u6709\u5217 if ( ( column + 1 ) / 2 - ( i - 1 ) <= j && j <= ( column + 1 ) / 2 + ( i - 1 ) ){ printf ( \"*\" ); } else { printf ( \" \" ); } } } else { // \u4e0b\u534a\u90e8\u5206 for ( j = 1 ; j <= column ; j ++ ){ // \u904d\u5386\u4e0b\u534a\u90e8\u5206\u7684\u6240\u6709\u5217 if ( ( column + 1 ) / 2 - ( line - i ) <= j && j <= ( column + 1 ) / 2 + ( line - i ) ){ printf ( \"*\" ); } else { printf ( \" \" ); } } } printf ( \" \\n \" ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"maopao/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7528\u5192\u6ce1\u6392\u5e8f\u6cd5\u5bf9\u4efb\u610f\u8f93\u5165\u7684 10 \u4e2a\u6570\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002 \u4ee3\u7801\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> #include <stdlib.h> int main (){ int num [ 10 ], i , j , temp ; printf ( \"\u8bf7\u4efb\u610f\u8f93\u516510\u4e2a\u6570:\" ); for ( i = 0 ; i < 10 ; i ++ ){ scanf ( \"%d\" , & num [ i ]); } for ( i = 0 ; i < 10 ; i ++ ){ for ( j = 0 ; j < 10 - i - 1 ; j ++ ){ if ( num [ j ] > num [ j + 1 ]){ temp = num [ j ]; num [ j ] = num [ j + 1 ]; num [ j + 1 ] = temp ; } } } printf ( \"\u6392\u5e8f\u7ed3\u679c\u4e3a:\" ); for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"%d \" , num [ i ]); } } \u7ed3\u679c\u8f93\u51fa \u00b6 1 2 3 4 5 \u8bf7\u4efb\u610f\u8f93\u516510\u4e2a\u6570:9 8 7 6 5 4 3 2 1 67 \u6392\u5e8f\u7ed3\u679c\u4e3a:1 2 3 4 5 6 7 8 9 67 -------------------------------- Process exited after 8.115 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"6.\u5192\u6ce1\u6392\u5e8f"},{"location":"maopao/#_1","text":"\u7528\u5192\u6ce1\u6392\u5e8f\u6cd5\u5bf9\u4efb\u610f\u8f93\u5165\u7684 10 \u4e2a\u6570\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"maopao/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> #include <stdlib.h> int main (){ int num [ 10 ], i , j , temp ; printf ( \"\u8bf7\u4efb\u610f\u8f93\u516510\u4e2a\u6570:\" ); for ( i = 0 ; i < 10 ; i ++ ){ scanf ( \"%d\" , & num [ i ]); } for ( i = 0 ; i < 10 ; i ++ ){ for ( j = 0 ; j < 10 - i - 1 ; j ++ ){ if ( num [ j ] > num [ j + 1 ]){ temp = num [ j ]; num [ j ] = num [ j + 1 ]; num [ j + 1 ] = temp ; } } } printf ( \"\u6392\u5e8f\u7ed3\u679c\u4e3a:\" ); for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"%d \" , num [ i ]); } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"maopao/#_3","text":"1 2 3 4 5 \u8bf7\u4efb\u610f\u8f93\u516510\u4e2a\u6570:9 8 7 6 5 4 3 2 1 67 \u6392\u5e8f\u7ed3\u679c\u4e3a:1 2 3 4 5 6 7 8 9 67 -------------------------------- Process exited after 8.115 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"\u7ed3\u679c\u8f93\u51fa"},{"location":"nixu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5c06\u4e00\u4e2a\u4ece\u952e\u76d8\u8f93\u5165\u7684\u6574\u6570\u5b58\u653e\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u901a\u8fc7\u7a0b\u5e8f\u7684\u8fd0\u884c\u6309\u7167\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u8f93\u51fa\u8be5\u6574\u6570\uff0c\u5229\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <stdio.h> int convert ( char s [], int n ) { int i ; if (( i = n / 10 ) != 0 ) convert ( s + 1 , i ); * s = n % 10 + '0' ; return 0 ; } int main () { int num ; char str [ 10 ] = \" \" ; printf ( \"input integer data\uff1a\" ); scanf ( \"%d\" , & num ); convert ( str , num ); printf ( \"output string\uff1a \\n \" ); puts ( str ); return 0 ; }","title":"30.\u6574\u6570\u9006\u5e8f\u8f93\u51fa"},{"location":"nixu/#_1","text":"\u5c06\u4e00\u4e2a\u4ece\u952e\u76d8\u8f93\u5165\u7684\u6574\u6570\u5b58\u653e\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u901a\u8fc7\u7a0b\u5e8f\u7684\u8fd0\u884c\u6309\u7167\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u8f93\u51fa\u8be5\u6574\u6570\uff0c\u5229\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"nixu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <stdio.h> int convert ( char s [], int n ) { int i ; if (( i = n / 10 ) != 0 ) convert ( s + 1 , i ); * s = n % 10 + '0' ; return 0 ; } int main () { int num ; char str [ 10 ] = \" \" ; printf ( \"input integer data\uff1a\" ); scanf ( \"%d\" , & num ); convert ( str , num ); printf ( \"output string\uff1a \\n \" ); puts ( str ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"pai/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u9898\u76ee1) \u5229\u7528\u516c\u5f0f\u2460\u8ba1\u6c42\u03c0\u7684\u8fd1\u4f3c\u503c\uff0c\u8981\u6c42\u7d2f\u52a0\u5230\u6700\u540e\u4e00\u9879\u5c0f\u4e8e10^(-6)\u4e3a\u6b62\u3002 \u9898\u76ee2) \u6839\u636e\u516c\u5f0f\u2461\uff0c\u7528\u524d100\u9879\u4e4b\u79ef\u8ba1\u7b97\u03c0\u7684\u503c\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 \u9898\u76ee1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <stdio.h> #include <stdlib.h> #include <math.h> int main (){ float s = 1 ; float pi = 0 ; float i = 1.0 ; float n = 1.0 ; while ( fabs ( i ) >= 1e-6 ){ pi += i ; n = n + 2 ; // \u8fd9\u91cc\u8bbe\u8ba1\u7684\u5f88\u5de7\u5999\uff0c\u6bcf\u6b21\u6b63\u8d1f\u53f7\u90fd\u4e0d\u4e00\u6837 s =- s ; i = s / n ; } pi = 4 * pi ; printf ( \"pi\u7684\u503c\u4e3a\uff1a%.6f \\n \" , pi ); return 0 ; } \u9898\u76ee2 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <stdio.h> #include <math.h> int main (){ float pi = 1 ; float n = 1 ; int j ; for ( j = 1 ; j <= 100 ; j ++ , n ++ ){ if ( j % 2 == 0 ){ pi *= ( n / ( n + 1 )); } else { pi *= (( n + 1 ) / n ); } } pi = 2 * pi ; printf ( \"pi\u7684\u503c\u4e3a\uff1a%.7f \\n \" , pi ); return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <stdio.h> #include <math.h> int main (){ float term , result = 1 ; int n ; for ( n = 2 ; n <= 100 ; n += 2 ){ term = ( float )( n * n ) / (( n - 1 ) * ( n + 1 )); result *= term ; } printf ( \"pi\u7684\u503c\u4e3a\uff1a%f \\n \" , 2 * result ); return 0 ; }","title":"38.\u6c42\u5706\u5468\u7387\u03a0"},{"location":"pai/#_1","text":"\u9898\u76ee1) \u5229\u7528\u516c\u5f0f\u2460\u8ba1\u6c42\u03c0\u7684\u8fd1\u4f3c\u503c\uff0c\u8981\u6c42\u7d2f\u52a0\u5230\u6700\u540e\u4e00\u9879\u5c0f\u4e8e10^(-6)\u4e3a\u6b62\u3002 \u9898\u76ee2) \u6839\u636e\u516c\u5f0f\u2461\uff0c\u7528\u524d100\u9879\u4e4b\u79ef\u8ba1\u7b97\u03c0\u7684\u503c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"pai/#_2","text":"","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"pai/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <stdio.h> #include <stdlib.h> #include <math.h> int main (){ float s = 1 ; float pi = 0 ; float i = 1.0 ; float n = 1.0 ; while ( fabs ( i ) >= 1e-6 ){ pi += i ; n = n + 2 ; // \u8fd9\u91cc\u8bbe\u8ba1\u7684\u5f88\u5de7\u5999\uff0c\u6bcf\u6b21\u6b63\u8d1f\u53f7\u90fd\u4e0d\u4e00\u6837 s =- s ; i = s / n ; } pi = 4 * pi ; printf ( \"pi\u7684\u503c\u4e3a\uff1a%.6f \\n \" , pi ); return 0 ; }","title":"\u9898\u76ee1"},{"location":"pai/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <stdio.h> #include <math.h> int main (){ float pi = 1 ; float n = 1 ; int j ; for ( j = 1 ; j <= 100 ; j ++ , n ++ ){ if ( j % 2 == 0 ){ pi *= ( n / ( n + 1 )); } else { pi *= (( n + 1 ) / n ); } } pi = 2 * pi ; printf ( \"pi\u7684\u503c\u4e3a\uff1a%.7f \\n \" , pi ); return 0 ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <stdio.h> #include <math.h> int main (){ float term , result = 1 ; int n ; for ( n = 2 ; n <= 100 ; n += 2 ){ term = ( float )( n * n ) / (( n - 1 ) * ( n + 1 )); result *= term ; } printf ( \"pi\u7684\u503c\u4e3a\uff1a%f \\n \" , 2 * result ); return 0 ; }","title":"\u9898\u76ee2"},{"location":"panduansanjiaoxing/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6839\u636e\u8f93\u5165\u7684\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9\u5224\u65ad\u4e09\u89d2\u5f62\u7684\u7c7b\u578b\uff0c\u5e76\u8f93\u51fa\u5176\u9762\u79ef\u548c\u7c7b\u578b\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <stdio.h> #include <math.h> int main () { float a , b , c ; float s , area ; printf ( \"\u8bf7\u8f93\u5165\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9: \\n \" ); scanf ( \"%f,%f,%f\" , & a , & b , & c ); if ( a + b > c && b + c > a && a + c > b ) { s = ( a + b + c ) / 2 ; area = ( float ) sqrt ( s * ( s - a ) * ( s - b ) * ( s - c )); printf ( \"\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u662f\uff1a%f \\n \" , area ); if ( a == b && a == c ) printf ( \"\u4e09\u89d2\u5f62\u662f\u7b49\u8fb9\u4e09\u89d2\u5f62 \\n \" ); else if ( a == b || a == c || b == c ) printf ( \"\u4e09\u89d2\u5f62\u662f\u7b49\u8170\u4e09\u89d2\u5f62 \\n \" ); else if (( a * a + b * b == c * c ) || ( a * a + c * c == b * b ) || ( b * b + c * c == a * a )) printf ( \"\u4e09\u89d2\u5f62\u662f\u76f4\u89d2\u4e09\u89d2\u5f62 \\n \" ); else printf ( \"\u4e09\u89d2\u5f62\u662f\u666e\u901a\u4e09\u89d2\u5f62 \\n \" ); } else printf ( \"\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \\n \" ); return 0 ; }","title":"14.\u5224\u65ad\u4e09\u89d2\u5f62\u7c7b\u578b"},{"location":"panduansanjiaoxing/#_1","text":"\u6839\u636e\u8f93\u5165\u7684\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9\u5224\u65ad\u4e09\u89d2\u5f62\u7684\u7c7b\u578b\uff0c\u5e76\u8f93\u51fa\u5176\u9762\u79ef\u548c\u7c7b\u578b\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"panduansanjiaoxing/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <stdio.h> #include <math.h> int main () { float a , b , c ; float s , area ; printf ( \"\u8bf7\u8f93\u5165\u4e09\u89d2\u5f62\u7684\u4e09\u6761\u8fb9: \\n \" ); scanf ( \"%f,%f,%f\" , & a , & b , & c ); if ( a + b > c && b + c > a && a + c > b ) { s = ( a + b + c ) / 2 ; area = ( float ) sqrt ( s * ( s - a ) * ( s - b ) * ( s - c )); printf ( \"\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u662f\uff1a%f \\n \" , area ); if ( a == b && a == c ) printf ( \"\u4e09\u89d2\u5f62\u662f\u7b49\u8fb9\u4e09\u89d2\u5f62 \\n \" ); else if ( a == b || a == c || b == c ) printf ( \"\u4e09\u89d2\u5f62\u662f\u7b49\u8170\u4e09\u89d2\u5f62 \\n \" ); else if (( a * a + b * b == c * c ) || ( a * a + c * c == b * b ) || ( b * b + c * c == a * a )) printf ( \"\u4e09\u89d2\u5f62\u662f\u76f4\u89d2\u4e09\u89d2\u5f62 \\n \" ); else printf ( \"\u4e09\u89d2\u5f62\u662f\u666e\u901a\u4e09\u89d2\u5f62 \\n \" ); } else printf ( \"\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"qinmishu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5982\u679c\u6574\u6570A\u7684\u5168\u90e8\u56e0\u5b50\uff08\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecA\u672c\u8eab\uff09\u4e4b\u548c\u7b49\u4e8eB\uff1b\u4e14\u6574\u6570B\u7684\u5168\u90e8\u56e0\u5b50\uff08\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecB\u672c\u8eab\uff09\u4e4b\u548c\u7b49\u4e8eA\uff0c\u5219\u5c06\u6574\u6570A\u548cB\u79f0\u4e3a\u4eb2\u5bc6\u6570\u3002\u6c423000\u4ee5\u5185\u7684\u5168\u90e8\u4eb2\u5bc6\u6570\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int a , i , b , n ; printf ( \"There are following friendly--numbers pair smaller than 3000: \\n \" ); for ( a = 1 ; a < 3000 ; a ++ ) /*\u7a77\u4e3e3000\u4ee5\u5185\u7684\u5168\u90e8\u6574\u6570*/ { for ( b = 0 , i = 1 ; i <= a / 2 ; i ++ ) /*\u8ba1\u7b97\u6570a\u7684\u5404\u56e0\u5b50\uff0c\u5404\u56e0\u5b50\u4e4b\u548c\u5b58\u653e\u4e8eb*/ if ( ! ( a % i )) b += i ; for ( n = 0 , i = 1 ; i <= b / 2 ; i ++ ) /*\u8ba1\u7b97b\u7684\u5404\u56e0\u5b50\uff0c\u5404\u56e0\u5b50\u4e4b\u548c\u5b58\u4e8en*/ if ( ! ( b % i )) n += i ; if ( n == a && a < b ) /*\u4f7f\u6bcf\u5bf9\u4eb2\u5bc6\u6570\u53ea\u8f93\u51fa\u4e00\u6b21*/ printf ( \"%4d--%4d \" , a , b ); /*\u82e5n=a\uff0c\u5219a\u548cb\u662f\u4e00\u5bf9\u4eb2\u5bc6\u6570\uff0c\u8f93\u51fa*/ } return 0 ; }","title":"42.\u6c42\u4eb2\u5bc6\u6570"},{"location":"qinmishu/#_1","text":"\u5982\u679c\u6574\u6570A\u7684\u5168\u90e8\u56e0\u5b50\uff08\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecA\u672c\u8eab\uff09\u4e4b\u548c\u7b49\u4e8eB\uff1b\u4e14\u6574\u6570B\u7684\u5168\u90e8\u56e0\u5b50\uff08\u5305\u62ec1\uff0c\u4e0d\u5305\u62ecB\u672c\u8eab\uff09\u4e4b\u548c\u7b49\u4e8eA\uff0c\u5219\u5c06\u6574\u6570A\u548cB\u79f0\u4e3a\u4eb2\u5bc6\u6570\u3002\u6c423000\u4ee5\u5185\u7684\u5168\u90e8\u4eb2\u5bc6\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"qinmishu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int a , i , b , n ; printf ( \"There are following friendly--numbers pair smaller than 3000: \\n \" ); for ( a = 1 ; a < 3000 ; a ++ ) /*\u7a77\u4e3e3000\u4ee5\u5185\u7684\u5168\u90e8\u6574\u6570*/ { for ( b = 0 , i = 1 ; i <= a / 2 ; i ++ ) /*\u8ba1\u7b97\u6570a\u7684\u5404\u56e0\u5b50\uff0c\u5404\u56e0\u5b50\u4e4b\u548c\u5b58\u653e\u4e8eb*/ if ( ! ( a % i )) b += i ; for ( n = 0 , i = 1 ; i <= b / 2 ; i ++ ) /*\u8ba1\u7b97b\u7684\u5404\u56e0\u5b50\uff0c\u5404\u56e0\u5b50\u4e4b\u548c\u5b58\u4e8en*/ if ( ! ( b % i )) n += i ; if ( n == a && a < b ) /*\u4f7f\u6bcf\u5bf9\u4eb2\u5bc6\u6570\u53ea\u8f93\u51fa\u4e00\u6b21*/ printf ( \"%4d--%4d \" , a , b ); /*\u82e5n=a\uff0c\u5219a\u548cb\u662f\u4e00\u5bf9\u4eb2\u5bc6\u6570\uff0c\u8f93\u51fa*/ } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"qiue/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u81ea\u7136\u5e95\u6570 e=2.718281828\u2026\uff0ce \u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a e=1+1/1!+\u00bd!+\u2153!+\u2026 \u8981\u6c42\u5f53\u6700\u540e\u4e00\u9879\u7684\u503c\u5c0f\u4e8e 10-10 \u65f6\u7ed3\u675f\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main () { float e = 1.0 , n = 1.0 ; int i = 1 ; while ( 1 / n > 1e-10 ) { e += 1 / n ; i ++ ; n = i * n ; } printf ( \"e\u7684\u503c\u662f\uff1a%f \\n \" , e ); return 0 ; }","title":"17.\u6c42\u81ea\u7136\u6570e"},{"location":"qiue/#_1","text":"\u81ea\u7136\u5e95\u6570 e=2.718281828\u2026\uff0ce \u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a e=1+1/1!+\u00bd!+\u2153!+\u2026 \u8981\u6c42\u5f53\u6700\u540e\u4e00\u9879\u7684\u503c\u5c0f\u4e8e 10-10 \u65f6\u7ed3\u675f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"qiue/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main () { float e = 1.0 , n = 1.0 ; int i = 1 ; while ( 1 / n > 1e-10 ) { e += 1 / n ; i ++ ; n = i * n ; } printf ( \"e\u7684\u503c\u662f\uff1a%f \\n \" , e ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"qiujuli/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u4e09\u7ef4\u7a7a\u95f4\u70b9\u5750\u6807\u7684\u7ed3\u6784\u7c7b\u578b\uff0c\u901a\u8fc7\u51fd\u6570\u6c42\u7a7a\u95f4\u4e0a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <stdio.h> #include <math.h> struct point { float x ; float y ; float z ; }; float dist ( struct point p1 , struct point p2 ) { float x , y , z ; float d ; x = fabs ( p1 . x - p2 . x ); y = fabs ( p1 . y - p2 . y ); z = fabs ( p1 . z - p2 . z ); d = sqrt ( x * x + y * y + z * z ); return d ; } int main () { struct point p1 , p2 ; printf ( \"Enter point1\uff1a\" ); scanf ( \"%f,%f,%f\" , & p1 . x , & p1 . y , & p1 . z ); printf ( \"Enter point2\uff1a\" ); scanf ( \"%f,%f,%f\" , & p2 . x , & p2 . y , & p2 . z ); printf ( \"distance: %f \\n \" , dist ( p1 , p2 )); return 0 ; }","title":"33.\u6c42\u7a7a\u95f4\u4e24\u70b9\u7684\u8ddd\u79bb"},{"location":"qiujuli/#_1","text":"\u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u4e09\u7ef4\u7a7a\u95f4\u70b9\u5750\u6807\u7684\u7ed3\u6784\u7c7b\u578b\uff0c\u901a\u8fc7\u51fd\u6570\u6c42\u7a7a\u95f4\u4e0a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"qiujuli/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <stdio.h> #include <math.h> struct point { float x ; float y ; float z ; }; float dist ( struct point p1 , struct point p2 ) { float x , y , z ; float d ; x = fabs ( p1 . x - p2 . x ); y = fabs ( p1 . y - p2 . y ); z = fabs ( p1 . z - p2 . z ); d = sqrt ( x * x + y * y + z * z ); return d ; } int main () { struct point p1 , p2 ; printf ( \"Enter point1\uff1a\" ); scanf ( \"%f,%f,%f\" , & p1 . x , & p1 . y , & p1 . z ); printf ( \"Enter point2\uff1a\" ); scanf ( \"%f,%f,%f\" , & p2 . x , & p2 . y , & p2 . z ); printf ( \"distance: %f \\n \" , dist ( p1 , p2 )); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"riqi/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u65e5\u671f\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u518d\u5206\u522b\u5b9a\u4e49\u51fd\u6570\u5b8c\u6210\u4e0b\u5217\u529f\u80fd\uff1a\u8ba1\u7b97\u67d0\u4e00\u5929\u662f\u5bf9\u5e94\u5e74\u7684\u7b2c\u51e0\u5929\uff0c\u8fd9\u4e00\u5e74\u4e00\u5171\u591a\u5c11\u5929\uff1b\u8ba1\u7b97\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u76f8\u9694\u7684\u5929\u6570\u3002\u4e24\u4e2a\u65e5\u671f\u7531\u952e\u76d8\u8f93\u5165\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 #include <stdio.h> #include <math.h> typedef struct { int year , month , day ; } Date ; int yearday ( int year ) { int yday ; if ( year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ) yday = 366 ; else yday = 365 ; return yday ; } int monthday ( int year ) { int mday ; if ( year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ) mday = 29 ; else mday = 28 ; return mday ; } int dayofyear ( Date d ) { int i , total = 0 ; int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; months [ 2 ] = monthday ( d . year ); for ( i = 1 ; i < d . month ; i ++ ) total = total + months [ i ]; total = total + d . day ; return total ; } int cmpdate ( Date d , Date s ) { int result ; if ( d . year == s . year ) { if ( d . month == s . month ) { if ( d . day == s . day ) result = 0 ; else result = d . day - s . day ; } else result = d . month - s . month ; } else result = d . year - s . year ; return result ; } int interday ( Date d , Date s ) { int result , te , ts , total ; int year , start , end , day ; int i ; result = cmpdate ( d , s ); if ( result > 0 ) { start = s . year ; end = d . year ; te = dayofyear ( d ); ts = dayofyear ( s ); } else if ( result < 0 ) { start = d . year ; end = s . year ; ts = dayofyear ( d ); te = dayofyear ( s ); } else return 0 ; if ( start == end ) return abs ( te - ts ); else { total = 0 ; for ( i = start ; i <= end ; i ++ ) { day = yearday ( i ); if ( i == start ) total = total + day - ts ; else if ( i == end ) total = total + te ; else total = total + day ; } } return total ; } int main () { Date d1 , d2 ; int y , n ; printf ( \"input date\uff1a\" ); scanf ( \"%d%d%d\" , & d1 . year , & d1 . month , & d1 . day ); scanf ( \"%d%d%d\" , & d2 . year , & d2 . month , & d2 . day ); y = yearday ( d1 . year ); n = dayofyear ( d1 ); printf ( \"%d days %d \\n \" , d1 . year , y ); printf ( \"%d-%d-%d is the %d day. \\n \" , d1 . year , d1 . month , d1 . day , n ); n = interday ( d1 , d2 ); printf ( \"%d-%d-%d and %d-%d-%d distance \" , d1 . year , d1 . month , d1 . day , d2 . year , d2 . month , d2 . day ); printf ( \"%d days \\n \" , n ); return 0 ; }","title":"34.\u65e5\u671f\u5904\u7406\u51fd\u6570"},{"location":"riqi/#_1","text":"\u5b9a\u4e49\u4e00\u4e2a\u8868\u793a\u65e5\u671f\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u518d\u5206\u522b\u5b9a\u4e49\u51fd\u6570\u5b8c\u6210\u4e0b\u5217\u529f\u80fd\uff1a\u8ba1\u7b97\u67d0\u4e00\u5929\u662f\u5bf9\u5e94\u5e74\u7684\u7b2c\u51e0\u5929\uff0c\u8fd9\u4e00\u5e74\u4e00\u5171\u591a\u5c11\u5929\uff1b\u8ba1\u7b97\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u76f8\u9694\u7684\u5929\u6570\u3002\u4e24\u4e2a\u65e5\u671f\u7531\u952e\u76d8\u8f93\u5165\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"riqi/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 #include <stdio.h> #include <math.h> typedef struct { int year , month , day ; } Date ; int yearday ( int year ) { int yday ; if ( year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ) yday = 366 ; else yday = 365 ; return yday ; } int monthday ( int year ) { int mday ; if ( year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ) mday = 29 ; else mday = 28 ; return mday ; } int dayofyear ( Date d ) { int i , total = 0 ; int months [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; months [ 2 ] = monthday ( d . year ); for ( i = 1 ; i < d . month ; i ++ ) total = total + months [ i ]; total = total + d . day ; return total ; } int cmpdate ( Date d , Date s ) { int result ; if ( d . year == s . year ) { if ( d . month == s . month ) { if ( d . day == s . day ) result = 0 ; else result = d . day - s . day ; } else result = d . month - s . month ; } else result = d . year - s . year ; return result ; } int interday ( Date d , Date s ) { int result , te , ts , total ; int year , start , end , day ; int i ; result = cmpdate ( d , s ); if ( result > 0 ) { start = s . year ; end = d . year ; te = dayofyear ( d ); ts = dayofyear ( s ); } else if ( result < 0 ) { start = d . year ; end = s . year ; ts = dayofyear ( d ); te = dayofyear ( s ); } else return 0 ; if ( start == end ) return abs ( te - ts ); else { total = 0 ; for ( i = start ; i <= end ; i ++ ) { day = yearday ( i ); if ( i == start ) total = total + day - ts ; else if ( i == end ) total = total + te ; else total = total + day ; } } return total ; } int main () { Date d1 , d2 ; int y , n ; printf ( \"input date\uff1a\" ); scanf ( \"%d%d%d\" , & d1 . year , & d1 . month , & d1 . day ); scanf ( \"%d%d%d\" , & d2 . year , & d2 . month , & d2 . day ); y = yearday ( d1 . year ); n = dayofyear ( d1 ); printf ( \"%d days %d \\n \" , d1 . year , y ); printf ( \"%d-%d-%d is the %d day. \\n \" , d1 . year , d1 . month , d1 . day , n ); n = interday ( d1 , d2 ); printf ( \"%d-%d-%d and %d-%d-%d distance \" , d1 . year , d1 . month , d1 . day , d2 . year , d2 . month , d2 . day ); printf ( \"%d days \\n \" , n ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"runnian/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5b9e\u4f8b\u8981\u6c42\u4ece\u952e\u76d8\u8f93\u5165\u4efb\u610f\u5e74\u4efd\u7684\u6574\u6570 N\uff0c\u901a\u8fc7\u7a0b\u5e8f\u8fd0\u884c\u5224\u65ad\u8be5\u5e74\u4efd\u662f\u5426\u4e3a\u95f0\u5e74\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <stdio.h> int main () { int year , a ; printf ( \"\u8bf7\u8f93\u4eba\u5e74\u4efd\uff1a \\n \" ); scanf ( \"%d\" , & year ); if ( year % 400 == 0 ) a = 1 ; else { if ( year % 4 == 0 && year % 100 != 0 ) a = 1 ; else a = 0 ; } if ( a == 1 ) { printf ( \"%d \u6b64\u5e74\u662f\u95f0\u5e74 \\n \" , year ); } else { printf ( \"%d \u6b64\u5e74\u975e\u95f0\u5e74 \\n \" , year ); } return 0 ; }","title":"20.\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74"},{"location":"runnian/#_1","text":"\u5b9e\u4f8b\u8981\u6c42\u4ece\u952e\u76d8\u8f93\u5165\u4efb\u610f\u5e74\u4efd\u7684\u6574\u6570 N\uff0c\u901a\u8fc7\u7a0b\u5e8f\u8fd0\u884c\u5224\u65ad\u8be5\u5e74\u4efd\u662f\u5426\u4e3a\u95f0\u5e74\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"runnian/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <stdio.h> int main () { int year , a ; printf ( \"\u8bf7\u8f93\u4eba\u5e74\u4efd\uff1a \\n \" ); scanf ( \"%d\" , & year ); if ( year % 400 == 0 ) a = 1 ; else { if ( year % 4 == 0 && year % 100 != 0 ) a = 1 ; else a = 0 ; } if ( a == 1 ) { printf ( \"%d \u6b64\u5e74\u662f\u95f0\u5e74 \\n \" , year ); } else { printf ( \"%d \u6b64\u5e74\u975e\u95f0\u5e74 \\n \" , year ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"sanseqi/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6709\u4e00\u6839\u7ef3\u5b50\uff0c\u4e0a\u9762\u6709\u7ea2\u3001\u767d\u3001\u84dd\u4e09\u79cd\u989c\u8272\u7684\u65d7\u5b50\u3002\u7ef3\u5b50\u4e0a\u65d7\u5b50\u7684\u989c\u8272\u5e76\u6ca1\u6709\u987a\u5e8f\uff0c\u73b0\u5728\u8981\u5bf9\u65d7\u5b50\u8fdb\u884c\u5206\u7c7b\uff0c\u6309\u7167\u84dd\u8272\u3001\u767d\u8272\u3001\u7ea2\u8272\u7684\u987a\u5e8f\u6392\u5217\u3002\u53ea\u80fd\u5728\u7ef3\u5b50\u4e0a\u8fdb\u884c\u79fb\u52a8\uff0c\u5e76\u4e14\u4e00\u6b21\u53ea\u80fd\u8c03\u6362\u4e24\u9762\u65d7\u5b50\uff0c\u600e\u6837\u79fb\u52a8\u624d\u80fd\u4f7f\u65d7\u5b50\u79fb\u52a8\u7684\u6b21\u6570\u6700\u5c11\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #include <stdio.h> #include <stdlib.h> #include <string.h> #define BLUE 'B' #define WHITE 'W' #define RED 'R' #define swap(x,y){char temp;\\ temp=color[x];\\ color[x]=color[y];\\ color[y]=temp;} int main () { char color [] = { 'R' , 'W' , 'B' , 'W' , 'W' , 'B' , 'R' , 'B' , 'W' , 'R' , '\\0' }; int w = 0 ; int b = 0 ; int r = strlen ( color ) - 1 ; int i ; for ( i = 0 ; i < strlen ( color ); i ++ ) printf ( \"%c \" , color [ i ]); printf ( \" \\n \" ); while ( w <= r ) { if ( color [ w ] == WHITE ) w ++ ; else { if ( color [ w ] == BLUE ) { swap ( b , w ); b ++ ; w ++ ; } else { while ( w < r && color [ r ] == RED ) r -- ; swap ( r , w ); r -- ; } } } for ( i = 0 ; i < strlen ( color ); i ++ ) printf ( \"%c \" , color [ i ]); printf ( \" \\n \" ); return 0 ; }","title":"31.\u4e09\u8272\u65d7\u95ee\u9898"},{"location":"sanseqi/#_1","text":"\u6709\u4e00\u6839\u7ef3\u5b50\uff0c\u4e0a\u9762\u6709\u7ea2\u3001\u767d\u3001\u84dd\u4e09\u79cd\u989c\u8272\u7684\u65d7\u5b50\u3002\u7ef3\u5b50\u4e0a\u65d7\u5b50\u7684\u989c\u8272\u5e76\u6ca1\u6709\u987a\u5e8f\uff0c\u73b0\u5728\u8981\u5bf9\u65d7\u5b50\u8fdb\u884c\u5206\u7c7b\uff0c\u6309\u7167\u84dd\u8272\u3001\u767d\u8272\u3001\u7ea2\u8272\u7684\u987a\u5e8f\u6392\u5217\u3002\u53ea\u80fd\u5728\u7ef3\u5b50\u4e0a\u8fdb\u884c\u79fb\u52a8\uff0c\u5e76\u4e14\u4e00\u6b21\u53ea\u80fd\u8c03\u6362\u4e24\u9762\u65d7\u5b50\uff0c\u600e\u6837\u79fb\u52a8\u624d\u80fd\u4f7f\u65d7\u5b50\u79fb\u52a8\u7684\u6b21\u6570\u6700\u5c11\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"sanseqi/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #include <stdio.h> #include <stdlib.h> #include <string.h> #define BLUE 'B' #define WHITE 'W' #define RED 'R' #define swap(x,y){char temp;\\ temp=color[x];\\ color[x]=color[y];\\ color[y]=temp;} int main () { char color [] = { 'R' , 'W' , 'B' , 'W' , 'W' , 'B' , 'R' , 'B' , 'W' , 'R' , '\\0' }; int w = 0 ; int b = 0 ; int r = strlen ( color ) - 1 ; int i ; for ( i = 0 ; i < strlen ( color ); i ++ ) printf ( \"%c \" , color [ i ]); printf ( \" \\n \" ); while ( w <= r ) { if ( color [ w ] == WHITE ) w ++ ; else { if ( color [ w ] == BLUE ) { swap ( b , w ); b ++ ; w ++ ; } else { while ( w < r && color [ r ] == RED ) r -- ; swap ( r , w ); r -- ; } } } for ( i = 0 ; i < strlen ( color ); i ++ ) printf ( \"%c \" , color [ i ]); printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"shengtuzi/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5047\u8bbe\u4e00\u5bf9\u5154\u5b50\u7684\u6210\u719f\u671f\u662f\u4e00\u4e2a\u6708\uff0c\u5373\u4e00\u4e2a\u6708\u53ef\u957f\u6210\u6210\u5154\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6bcf\u5bf9\u6210\u5154\u6bcf\u4e2a\u6708\u90fd\u751f\u4e00\u5bf9\u5c0f\u5154\uff0c\u4e00\u5bf9\u65b0\u751f\u7684\u5c0f\u5154\u4ece\u7b2c\u4e8c\u4e2a\u6708\u8d77\u5c31\u5f00\u59cb\u751f\u5154\u5b50\uff0c\u8bd5\u95ee\u4ece\u4e00\u5bf9\u5154\u5b50\u5f00\u59cb\u7e41\u6b96\uff0c\u4ee5\u540e\u6bcf\u4e2a\u6708\u4f1a\u6709\u591a\u5c11\u5bf9\u5154\u5b50\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> int main () { int i , tu1 , tu2 , tu3 , m ; tu1 = 1 ; tu2 = 1 ; printf ( \"\u8bf7\u8f93\u5165\u6708\u4efd\u6570 \\n \" ); scanf ( \"%d\" , & m ); if ( m == 1 || m == 2 ) { printf ( \"\u6709\u4e00\u5bf9\u5154\u5b50\" ); } else if ( m > 2 ) { for ( i = 3 ; i <= m ; i ++ ) { tu3 = tu1 + tu2 ; tu1 = tu2 ; tu2 = tu3 ; } printf ( \"%d \u6708\u7684\u5154\u5b50\u6570\u4e3a\uff1a%d \\n \" , m , tu3 ); } return 0 ; }","title":"22.\u5154\u5b50\u751f\u5154\u5b50\u95ee\u9898"},{"location":"shengtuzi/#_1","text":"\u5047\u8bbe\u4e00\u5bf9\u5154\u5b50\u7684\u6210\u719f\u671f\u662f\u4e00\u4e2a\u6708\uff0c\u5373\u4e00\u4e2a\u6708\u53ef\u957f\u6210\u6210\u5154\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6bcf\u5bf9\u6210\u5154\u6bcf\u4e2a\u6708\u90fd\u751f\u4e00\u5bf9\u5c0f\u5154\uff0c\u4e00\u5bf9\u65b0\u751f\u7684\u5c0f\u5154\u4ece\u7b2c\u4e8c\u4e2a\u6708\u8d77\u5c31\u5f00\u59cb\u751f\u5154\u5b50\uff0c\u8bd5\u95ee\u4ece\u4e00\u5bf9\u5154\u5b50\u5f00\u59cb\u7e41\u6b96\uff0c\u4ee5\u540e\u6bcf\u4e2a\u6708\u4f1a\u6709\u591a\u5c11\u5bf9\u5154\u5b50\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"shengtuzi/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <stdio.h> int main () { int i , tu1 , tu2 , tu3 , m ; tu1 = 1 ; tu2 = 1 ; printf ( \"\u8bf7\u8f93\u5165\u6708\u4efd\u6570 \\n \" ); scanf ( \"%d\" , & m ); if ( m == 1 || m == 2 ) { printf ( \"\u6709\u4e00\u5bf9\u5154\u5b50\" ); } else if ( m > 2 ) { for ( i = 3 ; i <= m ; i ++ ) { tu3 = tu1 + tu2 ; tu1 = tu2 ; tu2 = tu3 ; } printf ( \"%d \u6708\u7684\u5154\u5b50\u6570\u4e3a\uff1a%d \\n \" , m , tu3 ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"shudanci/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u5199\u82f1\u8bed\u4f5c\u6587\u65f6\uff0c\u5e38\u5e38\u8981\u6c42\u6ee1\u8db3\u4e00\u5b9a\u7684\u5b57\u6570\u3002\u5728\u4ee5\u5f80\uff0c\u8981\u4e48\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u6570\uff1b\u8981\u4e48\u6211\u4eec\u4f30\u7b97\u4e00\u884c\u7684\u5355\u8bcd\u6570\uff0c\u7136\u540e\u7528\u884c\u6570\u8fdb\u884c\u4f30\u7b97\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u592a\u8d39\u65f6\uff0c\u82e5\u662f\u957f\u7bc7\u5927\u8bba\uff0c\u90a3\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7edf\u8ba1\u7684\uff1b\u800c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e0d\u592a\u51c6\u786e\u3002\u8fd9\u5c31\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u53c8\u5feb\u3001\u53c8\u51c6\u786e\u5730\u7edf\u8ba1\u4e00\u7bc7\u82f1\u6587\u6587\u7ae0\u4e2d\u7684\u5355\u8bcd\u6570\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <stdio.h> int main () { printf ( \"\u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff1a \\n \" ); char ch ; int i , count = 0 , word = 0 ; while (( ch = getchar ()) != '\\n' ) if ( ch == ' ' ) word = 0 ; else if ( word == 0 ) { word = 1 ; count ++ ; } printf ( \"\u603b\u5171\u6709 %d \u4e2a\u5355\u8bcd \\n \" , count ); return 0 ; }","title":"26.\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570"},{"location":"shudanci/#_1","text":"\u5728\u5b9e\u9645\u751f\u6d3b\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u5199\u82f1\u8bed\u4f5c\u6587\u65f6\uff0c\u5e38\u5e38\u8981\u6c42\u6ee1\u8db3\u4e00\u5b9a\u7684\u5b57\u6570\u3002\u5728\u4ee5\u5f80\uff0c\u8981\u4e48\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5730\u6570\uff1b\u8981\u4e48\u6211\u4eec\u4f30\u7b97\u4e00\u884c\u7684\u5355\u8bcd\u6570\uff0c\u7136\u540e\u7528\u884c\u6570\u8fdb\u884c\u4f30\u7b97\u3002 \u7b2c\u4e00\u79cd\u65b9\u6cd5\u592a\u8d39\u65f6\uff0c\u82e5\u662f\u957f\u7bc7\u5927\u8bba\uff0c\u90a3\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7edf\u8ba1\u7684\uff1b\u800c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4e0d\u592a\u51c6\u786e\u3002\u8fd9\u5c31\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u53c8\u5feb\u3001\u53c8\u51c6\u786e\u5730\u7edf\u8ba1\u4e00\u7bc7\u82f1\u6587\u6587\u7ae0\u4e2d\u7684\u5355\u8bcd\u6570\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"shudanci/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <stdio.h> int main () { printf ( \"\u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff1a \\n \" ); char ch ; int i , count = 0 , word = 0 ; while (( ch = getchar ()) != '\\n' ) if ( ch == ' ' ) word = 0 ; else if ( word == 0 ) { word = 1 ; count ++ ; } printf ( \"\u603b\u5171\u6709 %d \u4e2a\u5355\u8bcd \\n \" , count ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"shuixianhua/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u963f\u59c6\u65af\u7279\u6717\u6570\u4e5f\u5c31\u662f\u4fd7\u79f0\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u6570\u672c\u8eab\u3002\u4f8b\u5982\uff1a153=13+53+33\uff0c\u6240\u4ee5 153 \u5c31\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\u3002\u6c42\u51fa\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main () { int i , j , k , n ; for ( i = 100 ; i < 1000 ; i ++ ) { j = i % 10 ; k = i / 10 % 10 ; n = i / 100 ; if ( j * j * j + k * k * k + n * n * n == i ) printf ( \"%5d \\n \" , i ); } return 0 ; }","title":"15.\u6c34\u4ed9\u82b1\u6570(\u963f\u59c6\u65af\u7279\u6717\u6570)"},{"location":"shuixianhua/#_1","text":"\u963f\u59c6\u65af\u7279\u6717\u6570\u4e5f\u5c31\u662f\u4fd7\u79f0\u7684\u6c34\u4ed9\u82b1\u6570\uff0c\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u6570\u672c\u8eab\u3002\u4f8b\u5982\uff1a153=13+53+33\uff0c\u6240\u4ee5 153 \u5c31\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\u3002\u6c42\u51fa\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"shuixianhua/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main () { int i , j , k , n ; for ( i = 100 ; i < 1000 ; i ++ ) { j = i % 10 ; k = i / 10 % 10 ; n = i / 100 ; if ( j * j * j + k * k * k + n * n * n == i ) printf ( \"%5d \\n \" , i ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"shuzipaixu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4efb\u610f\u8f93\u5165 3 \u4e2a\u6574\u6570\uff0c\u7f16\u7a0b\u5b9e\u73b0\u5bf9\u8fd9 3 \u4e2a\u6574\u6570\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u4ee3\u7801\u5b9e\u73b0 \u00b6 1.\u5192\u6ce1\u6392\u5e8f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <stdio.h> int main (){ int i , j , num [ 3 ], t ; printf ( \"\u8bf7\u8f93\u51653\u4e2a\u6570\u5b57:\" ); for ( i = 0 ; i < 3 ; i ++ ){ scanf ( \"%d\" , & num [ i ]); } printf ( \"\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e:\" ); for ( i = 0 ; i < 3 ; i ++ ){ printf ( \"%d \" , num [ i ]); } printf ( \" \\n \" ); for ( i = 0 ; i < 3 ; i ++ ){ for ( j = 0 ; j < 3 - i - 1 ; j ++ ){ if ( num [ j ] > num [ j + 1 ]){ t = num [ j ]; num [ j ] = num [ j + 1 ]; num [ j + 1 ] = t ; } } } printf ( \"\u6392\u5e8f\u5b8c\u540e\u7684\u6570\u636e\u4e3a:\" ); for ( i = 0 ; i < 3 ; i ++ ){ printf ( \"%d \" , num [ i ]); } } 2.\u666e\u901a\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <stdio.h> int main () { int a , b , c , t ; /*\u5b9a\u4e494\u4e2a\u57fa\u672c\u6574\u578b\u53d8\u91cfa\u3001b\u3001c\u3001t*/ printf ( \"Please input a,b,c: \\n \" ); /*\u53cc\u5f15\u53f7\u5185\u7684\u666e\u901a\u5b57\u7b26\u539f\u6837\u8f93\u51fa\u5e76\u6362\u884c*/ scanf ( \"%d,%d,%d\" , & a , & b , & c ); /*\u8f93\u5165\u4efb\u610f3\u4e2a\u6570*/ if ( a > b ) /*\u5982\u679ca\u5927\u4e8eb,\u501f\u52a9\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0a\u4e0eb\u503c\u7684\u4e92\u6362*/ { t = a ; a = b ; b = t ; } if ( a > c ) /*\u5982\u679ca\u5927\u4e8ec,\u501f\u52a9\u4e2d\u95f4\u53d8\u666ft\u5b9e\u73b0a\u4e0ec\u503c\u7684\u4e92\u6362*/ { t = a ; a = c ; c = t ; } if ( b > c ) /*\u5982\u679cb\u5927\u4e8ec,\u501f\u52a9\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0b\u4e0ec\u503c\u7684\u4e92\u6362*/ { t = b ; b = c ; c = t ; } printf ( \"The order of the number is: \\n \" ); printf ( \"%d,%d,%d\" , a , b , c ); /*\u8f93\u51fa\u51fd\u6570\u987a\u5e8f\u8f93\u51faa\u3001b\u3001c\u7684\u503c*/ return 0 ; } \u7ed3\u679c\u8f93\u51fa \u00b6 1 2 3 4 5 6 \u8bf7\u8f93\u51653\u4e2a\u6570\u5b57:12 3 25 \u8f93\u5165\u7684\u539f\u59cb\u6570\u636e:12 3 25 \u6392\u5e8f\u5b8c\u540e\u7684\u6570\u636e\u4e3a:3 12 25 -------------------------------- Process exited after 2.654 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"1.\u6570\u5b57\u6392\u5e8f"},{"location":"shuzipaixu/#_1","text":"\u4efb\u610f\u8f93\u5165 3 \u4e2a\u6574\u6570\uff0c\u7f16\u7a0b\u5b9e\u73b0\u5bf9\u8fd9 3 \u4e2a\u6574\u6570\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"shuzipaixu/#_2","text":"","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"shuzipaixu/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <stdio.h> int main (){ int i , j , num [ 3 ], t ; printf ( \"\u8bf7\u8f93\u51653\u4e2a\u6570\u5b57:\" ); for ( i = 0 ; i < 3 ; i ++ ){ scanf ( \"%d\" , & num [ i ]); } printf ( \"\u8f93\u5165\u7684\u539f\u59cb\u6570\u636e:\" ); for ( i = 0 ; i < 3 ; i ++ ){ printf ( \"%d \" , num [ i ]); } printf ( \" \\n \" ); for ( i = 0 ; i < 3 ; i ++ ){ for ( j = 0 ; j < 3 - i - 1 ; j ++ ){ if ( num [ j ] > num [ j + 1 ]){ t = num [ j ]; num [ j ] = num [ j + 1 ]; num [ j + 1 ] = t ; } } } printf ( \"\u6392\u5e8f\u5b8c\u540e\u7684\u6570\u636e\u4e3a:\" ); for ( i = 0 ; i < 3 ; i ++ ){ printf ( \"%d \" , num [ i ]); } }","title":"1.\u5192\u6ce1\u6392\u5e8f"},{"location":"shuzipaixu/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <stdio.h> int main () { int a , b , c , t ; /*\u5b9a\u4e494\u4e2a\u57fa\u672c\u6574\u578b\u53d8\u91cfa\u3001b\u3001c\u3001t*/ printf ( \"Please input a,b,c: \\n \" ); /*\u53cc\u5f15\u53f7\u5185\u7684\u666e\u901a\u5b57\u7b26\u539f\u6837\u8f93\u51fa\u5e76\u6362\u884c*/ scanf ( \"%d,%d,%d\" , & a , & b , & c ); /*\u8f93\u5165\u4efb\u610f3\u4e2a\u6570*/ if ( a > b ) /*\u5982\u679ca\u5927\u4e8eb,\u501f\u52a9\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0a\u4e0eb\u503c\u7684\u4e92\u6362*/ { t = a ; a = b ; b = t ; } if ( a > c ) /*\u5982\u679ca\u5927\u4e8ec,\u501f\u52a9\u4e2d\u95f4\u53d8\u666ft\u5b9e\u73b0a\u4e0ec\u503c\u7684\u4e92\u6362*/ { t = a ; a = c ; c = t ; } if ( b > c ) /*\u5982\u679cb\u5927\u4e8ec,\u501f\u52a9\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0b\u4e0ec\u503c\u7684\u4e92\u6362*/ { t = b ; b = c ; c = t ; } printf ( \"The order of the number is: \\n \" ); printf ( \"%d,%d,%d\" , a , b , c ); /*\u8f93\u51fa\u51fd\u6570\u987a\u5e8f\u8f93\u51faa\u3001b\u3001c\u7684\u503c*/ return 0 ; }","title":"2.\u666e\u901a\u65b9\u6cd5"},{"location":"shuzipaixu/#_3","text":"1 2 3 4 5 6 \u8bf7\u8f93\u51653\u4e2a\u6570\u5b57:12 3 25 \u8f93\u5165\u7684\u539f\u59cb\u6570\u636e:12 3 25 \u6392\u5e8f\u5b8c\u540e\u7684\u6570\u636e\u4e3a:3 12 25 -------------------------------- Process exited after 2.654 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"\u7ed3\u679c\u8f93\u51fa"},{"location":"sushu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7d20\u6570\u53c8\u79f0\u8d28\u6570\u3002\u6240\u8c13\u7d20\u6570\u662f\u6307\u9664\u4e86 1 \u548c\u5b83\u672c\u8eab\u4ee5\u5916\uff0c\u4e0d\u80fd\u88ab\u4efb\u4f55\u6574\u6570\u6574\u9664\u7684\u6570\uff0c\u4f8b\u598217\u5c31\u662f\u7d20\u6570\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u88ab 2~16 \u7684\u4efb\u4e00\u6574\u6570\u6574\u9664\u3002 \u601d\u8def1)\uff1a\u56e0\u6b64\u5224\u65ad\u4e00\u4e2a\u6574\u6570m\u662f\u5426\u662f\u7d20\u6570\uff0c\u53ea\u9700\u628a m \u88ab 2 ~ m-1 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u5982\u679c\u90fd\u4e0d\u80fd\u88ab\u6574\u9664\uff0c\u90a3\u4e48 m \u5c31\u662f\u4e00\u4e2a\u7d20\u6570\u3002 \u601d\u8def2)\uff1a\u53e6\u5916\u5224\u65ad\u65b9\u6cd5\u8fd8\u53ef\u4ee5\u7b80\u5316\u3002m \u4e0d\u5fc5\u88ab 2 ~ m-1 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u53ea\u9700\u88ab 2 ~ \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c m \u4e0d\u80fd\u88ab 2 ~ \u95f4\u4efb\u4e00\u6574\u6570\u6574\u9664\uff0cm \u5fc5\u5b9a\u662f\u7d20\u6570\u3002\u4f8b\u5982\u5224\u522b 17 \u662f\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u53ea\u9700\u4f7f 17 \u88ab 2~4 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u7531\u4e8e\u90fd\u4e0d\u80fd\u6574\u9664\uff0c\u53ef\u4ee5\u5224\u5b9a 17 \u662f\u7d20\u6570\u3002 \u539f\u56e0\uff1a\u56e0\u4e3a\u5982\u679c m \u80fd\u88ab 2 ~ m-1 \u4e4b\u95f4\u4efb\u4e00\u6574\u6570\u6574\u9664\uff0c\u5176\u4e8c\u4e2a\u56e0\u5b50\u5fc5\u5b9a\u6709\u4e00\u4e2a\u5c0f\u4e8e\u6216\u7b49\u4e8e \uff0c\u53e6\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e \u3002\u4f8b\u5982 16 \u80fd\u88ab 2\u30014\u30018 \u6574\u9664\uff0c16=2 8\uff0c2 \u5c0f\u4e8e 4\uff0c8 \u5927\u4e8e 4\uff0c16=4 4\uff0c4=\u221a16\uff0c\u56e0\u6b64\u53ea\u9700\u5224\u5b9a\u5728 2~4 \u4e4b\u95f4\u6709\u65e0\u56e0\u5b50\u5373\u53ef\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1.\u5faa\u73af\u904d\u5386 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <stdio.h> int main (){ int a = 0 ; // \u7d20\u6570\u7684\u4e2a\u6570 int num = 0 ; // \u8f93\u5165\u7684\u6574\u6570 printf ( \"\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" ); scanf ( \"%d\" , & num ); for ( int i = 2 ; i < num ; i ++ ){ if ( num % i == 0 ){ a ++ ; // \u7d20\u6570\u4e2a\u6570\u52a01 } } if ( a == 0 ){ printf ( \"%d\u662f\u7d20\u6570\u3002 \\n \" , num ); } else { printf ( \"%d\u4e0d\u662f\u7d20\u6570\u3002 \\n \" , num ); } return 0 ; } 2.\u5f00\u6839\u53f7 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> #include <math.h> int main (){ int m ; // \u8f93\u5165\u7684\u6574\u6570 int i ; // \u5faa\u73af\u6b21\u6570 int k ; // m \u7684\u5e73\u65b9\u6839 printf ( \"\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" ); scanf ( \"%d\" , & m ); // \u6c42\u5e73\u65b9\u6839\uff0c\u6ce8\u610fsqrt()\u7684\u53c2\u6570\u4e3a double \u7c7b\u578b\uff0c\u8fd9\u91cc\u8981\u5f3a\u5236\u8f6c\u6362m\u7684\u7c7b\u578b k = ( int ) sqrt ( ( double ) m ); for ( i = 2 ; i <= k ; i ++ ) if ( m % i == 0 ) break ; // \u5982\u679c\u5b8c\u6210\u6240\u6709\u5faa\u73af\uff0c\u90a3\u4e48m\u4e3a\u7d20\u6570 // \u6ce8\u610f\u6700\u540e\u4e00\u6b21\u5faa\u73af\uff0c\u4f1a\u6267\u884ci++\uff0c\u6b64\u65f6 i=k+1\uff0c\u6240\u4ee5\u6709i>k if ( i > k ) printf ( \"%d\u662f\u7d20\u6570\u3002 \\n \" , m ); else printf ( \"%d\u4e0d\u662f\u7d20\u6570\u3002 \\n \" , m ); return 0 ; } \u7ed3\u679c\u8f93\u51fa \u00b6 1 2 3 4 5 6 \u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a45 45\u4e0d\u662f\u7d20\u6570\u3002 -------------------------------- Process exited after 3.195 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"39.\u5224\u65ad\u7d20\u6570"},{"location":"sushu/#_1","text":"\u7d20\u6570\u53c8\u79f0\u8d28\u6570\u3002\u6240\u8c13\u7d20\u6570\u662f\u6307\u9664\u4e86 1 \u548c\u5b83\u672c\u8eab\u4ee5\u5916\uff0c\u4e0d\u80fd\u88ab\u4efb\u4f55\u6574\u6570\u6574\u9664\u7684\u6570\uff0c\u4f8b\u598217\u5c31\u662f\u7d20\u6570\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u88ab 2~16 \u7684\u4efb\u4e00\u6574\u6570\u6574\u9664\u3002 \u601d\u8def1)\uff1a\u56e0\u6b64\u5224\u65ad\u4e00\u4e2a\u6574\u6570m\u662f\u5426\u662f\u7d20\u6570\uff0c\u53ea\u9700\u628a m \u88ab 2 ~ m-1 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u5982\u679c\u90fd\u4e0d\u80fd\u88ab\u6574\u9664\uff0c\u90a3\u4e48 m \u5c31\u662f\u4e00\u4e2a\u7d20\u6570\u3002 \u601d\u8def2)\uff1a\u53e6\u5916\u5224\u65ad\u65b9\u6cd5\u8fd8\u53ef\u4ee5\u7b80\u5316\u3002m \u4e0d\u5fc5\u88ab 2 ~ m-1 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u53ea\u9700\u88ab 2 ~ \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c m \u4e0d\u80fd\u88ab 2 ~ \u95f4\u4efb\u4e00\u6574\u6570\u6574\u9664\uff0cm \u5fc5\u5b9a\u662f\u7d20\u6570\u3002\u4f8b\u5982\u5224\u522b 17 \u662f\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u53ea\u9700\u4f7f 17 \u88ab 2~4 \u4e4b\u95f4\u7684\u6bcf\u4e00\u4e2a\u6574\u6570\u53bb\u9664\uff0c\u7531\u4e8e\u90fd\u4e0d\u80fd\u6574\u9664\uff0c\u53ef\u4ee5\u5224\u5b9a 17 \u662f\u7d20\u6570\u3002 \u539f\u56e0\uff1a\u56e0\u4e3a\u5982\u679c m \u80fd\u88ab 2 ~ m-1 \u4e4b\u95f4\u4efb\u4e00\u6574\u6570\u6574\u9664\uff0c\u5176\u4e8c\u4e2a\u56e0\u5b50\u5fc5\u5b9a\u6709\u4e00\u4e2a\u5c0f\u4e8e\u6216\u7b49\u4e8e \uff0c\u53e6\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e \u3002\u4f8b\u5982 16 \u80fd\u88ab 2\u30014\u30018 \u6574\u9664\uff0c16=2 8\uff0c2 \u5c0f\u4e8e 4\uff0c8 \u5927\u4e8e 4\uff0c16=4 4\uff0c4=\u221a16\uff0c\u56e0\u6b64\u53ea\u9700\u5224\u5b9a\u5728 2~4 \u4e4b\u95f4\u6709\u65e0\u56e0\u5b50\u5373\u53ef\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"sushu/#_2","text":"","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"sushu/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <stdio.h> int main (){ int a = 0 ; // \u7d20\u6570\u7684\u4e2a\u6570 int num = 0 ; // \u8f93\u5165\u7684\u6574\u6570 printf ( \"\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" ); scanf ( \"%d\" , & num ); for ( int i = 2 ; i < num ; i ++ ){ if ( num % i == 0 ){ a ++ ; // \u7d20\u6570\u4e2a\u6570\u52a01 } } if ( a == 0 ){ printf ( \"%d\u662f\u7d20\u6570\u3002 \\n \" , num ); } else { printf ( \"%d\u4e0d\u662f\u7d20\u6570\u3002 \\n \" , num ); } return 0 ; }","title":"1.\u5faa\u73af\u904d\u5386"},{"location":"sushu/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> #include <math.h> int main (){ int m ; // \u8f93\u5165\u7684\u6574\u6570 int i ; // \u5faa\u73af\u6b21\u6570 int k ; // m \u7684\u5e73\u65b9\u6839 printf ( \"\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a\" ); scanf ( \"%d\" , & m ); // \u6c42\u5e73\u65b9\u6839\uff0c\u6ce8\u610fsqrt()\u7684\u53c2\u6570\u4e3a double \u7c7b\u578b\uff0c\u8fd9\u91cc\u8981\u5f3a\u5236\u8f6c\u6362m\u7684\u7c7b\u578b k = ( int ) sqrt ( ( double ) m ); for ( i = 2 ; i <= k ; i ++ ) if ( m % i == 0 ) break ; // \u5982\u679c\u5b8c\u6210\u6240\u6709\u5faa\u73af\uff0c\u90a3\u4e48m\u4e3a\u7d20\u6570 // \u6ce8\u610f\u6700\u540e\u4e00\u6b21\u5faa\u73af\uff0c\u4f1a\u6267\u884ci++\uff0c\u6b64\u65f6 i=k+1\uff0c\u6240\u4ee5\u6709i>k if ( i > k ) printf ( \"%d\u662f\u7d20\u6570\u3002 \\n \" , m ); else printf ( \"%d\u4e0d\u662f\u7d20\u6570\u3002 \\n \" , m ); return 0 ; }","title":"2.\u5f00\u6839\u53f7"},{"location":"sushu/#_3","text":"1 2 3 4 5 6 \u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff1a45 45\u4e0d\u662f\u7d20\u6570\u3002 -------------------------------- Process exited after 3.195 seconds with return value 0 \u8bf7\u6309\u4efb\u610f\u952e\u7ee7\u7eed. . .","title":"\u7ed3\u679c\u8f93\u51fa"},{"location":"wanshu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6c42\u67d0\u4e00\u8303\u56f4\u5185\u5b8c\u6570\u7684\u4e2a\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u7b49\u4e8e\u5b83\u7684\u56e0\u5b50\u4e4b\u548c\uff0c\u5219\u79f0\u8be5\u6570\u4e3a\u201c\u5b8c\u6570\u201d\uff08\u6216\u201c\u5b8c\u5168\u6570\u201d)\u3002\u4f8b\u5982\uff0c6\u7684\u56e0\u5b50\u4e3a1\u30012\u30013\uff0c\u800c 6=1+2+3\uff0c\u56e0\u6b646\u662f\u201c\u5b8c\u6570\u201d\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int i , j , s , n ; /*\u53d8\u91cfi\u63a7\u5236\u9009\u5b9a\u6570\u8303\u56f4\uff0cj\u63a7\u5236\u9664\u6570\u8303\u56f4\uff0cs\u8bb0\u5f55\u7d2f\u52a0\u56e0\u5b50\u4e4b\u548c*/ printf ( \"\u8bf7\u8f93\u5165\u6240\u9009\u8303\u56f4\u4e0a\u9650\uff1a\" ); scanf ( \"%d\" , & n ); /* n\u7684\u503c\u7531\u952e\u76d8\u8f93\u5165*/ for ( i = 2 ; i <= n ; i ++ ) { s = 0 ; /*\u4fdd\u8bc1\u6bcf\u6b21\u5faa\u73af\u65f6s\u7684\u521d\u503c\u4e3a0*/ for ( j = 1 ; j < i ; j ++ ) { if ( i % j == 0 ) /*\u5224\u65adj\u662f\u5426\u4e3ai\u7684\u56e0\u5b50*/ s += j ; } if ( s == i ) /*\u5224\u65ad\u56e0\u5b50\u8fd9\u548c\u662f\u5426\u548c\u539f\u6570\u76f8\u7b49*/ printf ( \"It's a perfect number:%d \\n \" , i ); } return 0 ; }","title":"41.\u6c42\u5b8c\u6570(\u5b8c\u5168\u6570)"},{"location":"wanshu/#_1","text":"\u6c42\u67d0\u4e00\u8303\u56f4\u5185\u5b8c\u6570\u7684\u4e2a\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u7b49\u4e8e\u5b83\u7684\u56e0\u5b50\u4e4b\u548c\uff0c\u5219\u79f0\u8be5\u6570\u4e3a\u201c\u5b8c\u6570\u201d\uff08\u6216\u201c\u5b8c\u5168\u6570\u201d)\u3002\u4f8b\u5982\uff0c6\u7684\u56e0\u5b50\u4e3a1\u30012\u30013\uff0c\u800c 6=1+2+3\uff0c\u56e0\u6b646\u662f\u201c\u5b8c\u6570\u201d\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"wanshu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <stdio.h> int main () { int i , j , s , n ; /*\u53d8\u91cfi\u63a7\u5236\u9009\u5b9a\u6570\u8303\u56f4\uff0cj\u63a7\u5236\u9664\u6570\u8303\u56f4\uff0cs\u8bb0\u5f55\u7d2f\u52a0\u56e0\u5b50\u4e4b\u548c*/ printf ( \"\u8bf7\u8f93\u5165\u6240\u9009\u8303\u56f4\u4e0a\u9650\uff1a\" ); scanf ( \"%d\" , & n ); /* n\u7684\u503c\u7531\u952e\u76d8\u8f93\u5165*/ for ( i = 2 ; i <= n ; i ++ ) { s = 0 ; /*\u4fdd\u8bc1\u6bcf\u6b21\u5faa\u73af\u65f6s\u7684\u521d\u503c\u4e3a0*/ for ( j = 1 ; j < i ; j ++ ) { if ( i % j == 0 ) /*\u5224\u65adj\u662f\u5426\u4e3ai\u7684\u56e0\u5b50*/ s += j ; } if ( s == i ) /*\u5224\u65ad\u56e0\u5b50\u8fd9\u548c\u662f\u5426\u548c\u539f\u6570\u76f8\u7b49*/ printf ( \"It's a perfect number:%d \\n \" , i ); } return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"xier/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7528\u5e0c\u5c14\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 69\u300156\u300112\u3001136\u30013\u300155\u300146\u3001 99\u300188\u300125\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> int shsort ( int s [], int n ) /* \u81ea\u5b9a\u4e49\u51fd\u6570 shsort()*/ { int i , j , d ; d = n / 2 ; /*\u786e\u5b9a\u56fa\u5b9a\u589e\u867d\u503c*/ while ( d >= 1 ) { for ( i = d + 1 ; i <= n ; i ++ ) /*\u6570\u7ec4\u4e0b\u6807\u4eced+1\u5f00\u59cb\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f*/ { s [ 0 ] = s [ i ]; /*\u8bbe\u7f6e\u76d1\u89c6\u54e8*/ j = i - d ; /*\u786e\u5b9a\u8981\u8fdb\u884c\u6bd4\u8f83\u7684\u5143\u7d20\u7684\u6700\u53f3\u8fb9\u4f4d\u7f6e*/ while (( j > 0 ) && ( s [ 0 ] < s [ j ])) { s [ j + d ] = s [ j ]; /*\u6570\u636e\u53f3\u79fb*/ j = j - d ; /*\u5411\u5de6\u79fbd\u4e2a\u4f4d\u7f6eV*/ } s [ j + d ] = s [ 0 ]; /*\u5728\u786e\u5b9a\u7684\u4f4d\u7f5d\u63d2\u5165s[i]*/ } d = d / 2 ; /*\u589e\u91cc\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a*/ } return 0 ; } int main () { int a [ 11 ], i ; /*\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b*/ printf ( \"\u8bf7\u8f93\u5165 10 \u4e2a\u6570\u636e\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); /*\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u6570\u636e*/ shsort ( a , 10 ); /* \u8c03\u7528 shsort()\u51fd\u6570*/ printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); /*\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4*/ printf ( \" \\n \" ); return 0 ; }","title":"5.\u5e0c\u5c14\u6392\u5e8f"},{"location":"xier/#_1","text":"\u7528\u5e0c\u5c14\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 69\u300156\u300112\u3001136\u30013\u300155\u300146\u3001 99\u300188\u300125\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"xier/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> int shsort ( int s [], int n ) /* \u81ea\u5b9a\u4e49\u51fd\u6570 shsort()*/ { int i , j , d ; d = n / 2 ; /*\u786e\u5b9a\u56fa\u5b9a\u589e\u867d\u503c*/ while ( d >= 1 ) { for ( i = d + 1 ; i <= n ; i ++ ) /*\u6570\u7ec4\u4e0b\u6807\u4eced+1\u5f00\u59cb\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f*/ { s [ 0 ] = s [ i ]; /*\u8bbe\u7f6e\u76d1\u89c6\u54e8*/ j = i - d ; /*\u786e\u5b9a\u8981\u8fdb\u884c\u6bd4\u8f83\u7684\u5143\u7d20\u7684\u6700\u53f3\u8fb9\u4f4d\u7f6e*/ while (( j > 0 ) && ( s [ 0 ] < s [ j ])) { s [ j + d ] = s [ j ]; /*\u6570\u636e\u53f3\u79fb*/ j = j - d ; /*\u5411\u5de6\u79fbd\u4e2a\u4f4d\u7f6eV*/ } s [ j + d ] = s [ 0 ]; /*\u5728\u786e\u5b9a\u7684\u4f4d\u7f5d\u63d2\u5165s[i]*/ } d = d / 2 ; /*\u589e\u91cc\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a*/ } return 0 ; } int main () { int a [ 11 ], i ; /*\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u672c\u6574\u578b*/ printf ( \"\u8bf7\u8f93\u5165 10 \u4e2a\u6570\u636e\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); /*\u4ece\u952e\u76d8\u4e2d\u8f93\u516510\u4e2a\u6570\u636e*/ shsort ( a , 10 ); /* \u8c03\u7528 shsort()\u51fd\u6570*/ printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); /*\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4*/ printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"xuanze/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7528\u9009\u62e9\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 526\u300136\u30012\u3001369\u300156\u300145\u300178\u300192\u3001125\u300152\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int i , j , t , a [ 11 ]; //\u5b9a\u4e49\u53d8\u91cf\u53ca\u6570\u7ec4\u4e3a\u57fa\u672c\u6574\u578b printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u5165\u8981\u6392\u5e8f\u768410\u4e2a\u6570\u5b57 for ( i = 1 ; i <= 9 ; i ++ ) for ( j = i + 1 ; j <= 10 ; j ++ ) if ( a [ i ] > a [ j ]) //\u5982\u679c\u524d\u4e00\u4e2a\u6570\u6bd4\u540e\u4e00\u4e2a\u6570\u5927\uff0c\u5219\u5229\u7528\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0\u4e24\u503c\u4e92\u6362 { t = a [ i ]; a [ i ] = a [ j ]; a [ j ] = t ; } printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 printf ( \" \\n \" ); return 0 ; }","title":"9.\u9009\u62e9\u6392\u5e8f"},{"location":"xuanze/#_1","text":"\u7528\u9009\u62e9\u6392\u5e8f\u6cd5\u5bf9\u4e00\u7ec4\u6570\u636e\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\uff0c\u6570\u636e\u5206\u522b\u4e3a 526\u300136\u30012\u3001369\u300156\u300145\u300178\u300192\u3001125\u300152\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"xuanze/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <stdio.h> int main () { int i , j , t , a [ 11 ]; //\u5b9a\u4e49\u53d8\u91cf\u53ca\u6570\u7ec4\u4e3a\u57fa\u672c\u6574\u578b printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u4ece\u952e\u76d8\u4e2d\u8f93\u5165\u8981\u6392\u5e8f\u768410\u4e2a\u6570\u5b57 for ( i = 1 ; i <= 9 ; i ++ ) for ( j = i + 1 ; j <= 10 ; j ++ ) if ( a [ i ] > a [ j ]) //\u5982\u679c\u524d\u4e00\u4e2a\u6570\u6bd4\u540e\u4e00\u4e2a\u6570\u5927\uff0c\u5219\u5229\u7528\u4e2d\u95f4\u53d8\u91cft\u5b9e\u73b0\u4e24\u503c\u4e92\u6362 { t = a [ i ]; a [ i ] = a [ j ]; a [ j ] = t ; } printf ( \"\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"yanghui/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u6768\u8f89\u4e09\u89d2\u662f\u6211\u4eec\u4ece\u521d\u4e2d\u5c31\u77e5\u9053\u7684\uff0c\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7528C\u8bed\u8a00\u5c06\u5b83\u5728\u8ba1\u7b97\u673a\u4e0a\u663e\u793a\u51fa\u6765\u3002 \u5728\u521d\u4e2d\uff0c\u6211\u4eec\u5c31\u77e5\u9053\uff0c\u6768\u8f89\u4e09\u89d2\u7684\u4e24\u4e2a\u8170\u8fb9\u7684\u6570\u90fd\u662f 1\uff0c\u5176\u5b83\u4f4d\u7f6e\u7684\u6570\u90fd\u662f\u4e0a\u9876\u4e0a\u4e24\u4e2a\u6570\u4e4b\u548c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7528C\u8bed\u8a00\u5199\u6768\u8f89\u4e09\u89d2\u7684\u5173\u952e\u4e4b\u4e00\u3002 \u5728\u9ad8\u4e2d\u7684\u65f6\u5019\u6211\u4eec\u53c8\u77e5\u9053\uff0c\u6768\u8f89\u4e09\u89d2\u7684\u4efb\u610f\u4e00\u884c\u90fd\u662f\u7684\u4e8c\u9879\u5f0f\u7cfb\u6570\uff0cn \u4e3a\u884c\u6570\u51cf 1\u3002\u4e5f\u5c31\u662f\u8bf4\u4efb\u4f55\u4e00\u4e2a\u6570\u7b49\u4e8e\u8fd9\u4e2a\u662f\u9ad8\u4e2d\u7684\u7ec4\u5408\u6570\u3002n \u4ee3\u8868\u884c\u6570\u51cf 1\uff0c\u4e0d\u4ee3\u8868\u5217\u6570\u51cf 1\u3002\u5982\uff1a\u7b2c\u4e94\u884c\u7684\u7b2c\u4e09\u4e2a\u6570\u5c31\u4e3a =6\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <stdio.h> #define N 14 void main () { int i , j , k , n = 0 , a [ N ][ N ]; /*\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4a[14][14]*/ while ( n <= 0 || n >= 13 ){ /*\u63a7\u5236\u6253\u5370\u7684\u884c\u6570\u4e0d\u8981\u592a\u5927\uff0c\u8fc7\u5927\u4f1a\u9020\u6210\u663e\u793a\u4e0d\u89c4\u8303*/ printf ( \"\u8bf7\u8f93\u5165\u8981\u6253\u5370\u7684\u884c\u6570\uff1a\" ); scanf ( \"%d\" , & n ); } printf ( \"%d\u884c\u6768\u8f89\u4e09\u89d2\u5982\u4e0b\uff1a \\n \" , n ); for ( i = 1 ; i <= n ; i ++ ) a [ i ][ 1 ] = a [ i ][ i ] = 1 ; /*\u4e24\u8fb9\u7684\u6570\u4ee4\u5b83\u4e3a1\uff0c\u56e0\u4e3a\u73b0\u5728\u5faa\u73af\u4ece1\u5f00\u59cb\uff0c\u5c31\u8ba4\u4e3aa[i][1]\u4e3a\u7b2c\u4e00\u4e2a\u6570*/ for ( i = 3 ; i <= n ; i ++ ) for ( j = 2 ; j <= i - 1 ; j ++ ) a [ i ][ j ] = a [ i - 1 ][ j - 1 ] + a [ i - 1 ][ j ]; /*\u9664\u4e24\u8fb9\u7684\u6570\u5916\u90fd\u7b49\u4e8e\u4e0a\u4e24\u9876\u6570\u4e4b\u548c*/ for ( i = 1 ; i <= n ; i ++ ){ for ( k = 1 ; k <= n - i ; k ++ ) printf ( \" \" ); /*\u8fd9\u4e00\u884c\u4e3b\u8981\u662f\u5728\u8f93\u51fa\u6570\u4e4b\u524d\u6253\u4e0a\u7a7a\u683c\u5360\u4f4d\uff0c\u8ba9\u8f93\u51fa\u7684\u6570\u66f4\u7f8e\u89c2*/ for ( j = 1 ; j <= i ; j ++ ) /*j<=i\u7684\u539f\u56e0\u662f\u4e0d\u8f93\u51fa\u5176\u5b83\u7684\u6570\uff0c\u53ea\u8f93\u51fa\u6211\u4eec\u60f3\u8981\u7684\u6570*/ printf ( \"%6d\" , a [ i ][ j ]); printf ( \" \\n \" ); /*\u5f53\u4e00\u884c\u8f93\u51fa\u5b8c\u4ee5\u540e\u6362\u884c\u7ee7\u7eed\u4e0b\u4e00\u884c\u7684\u8f93\u51fa*/ } printf ( \" \\n \" ); }","title":"37.\u6768\u8f89\u4e09\u89d2"},{"location":"yanghui/#_1","text":"\u6768\u8f89\u4e09\u89d2\u662f\u6211\u4eec\u4ece\u521d\u4e2d\u5c31\u77e5\u9053\u7684\uff0c\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7528C\u8bed\u8a00\u5c06\u5b83\u5728\u8ba1\u7b97\u673a\u4e0a\u663e\u793a\u51fa\u6765\u3002 \u5728\u521d\u4e2d\uff0c\u6211\u4eec\u5c31\u77e5\u9053\uff0c\u6768\u8f89\u4e09\u89d2\u7684\u4e24\u4e2a\u8170\u8fb9\u7684\u6570\u90fd\u662f 1\uff0c\u5176\u5b83\u4f4d\u7f6e\u7684\u6570\u90fd\u662f\u4e0a\u9876\u4e0a\u4e24\u4e2a\u6570\u4e4b\u548c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7528C\u8bed\u8a00\u5199\u6768\u8f89\u4e09\u89d2\u7684\u5173\u952e\u4e4b\u4e00\u3002 \u5728\u9ad8\u4e2d\u7684\u65f6\u5019\u6211\u4eec\u53c8\u77e5\u9053\uff0c\u6768\u8f89\u4e09\u89d2\u7684\u4efb\u610f\u4e00\u884c\u90fd\u662f\u7684\u4e8c\u9879\u5f0f\u7cfb\u6570\uff0cn \u4e3a\u884c\u6570\u51cf 1\u3002\u4e5f\u5c31\u662f\u8bf4\u4efb\u4f55\u4e00\u4e2a\u6570\u7b49\u4e8e\u8fd9\u4e2a\u662f\u9ad8\u4e2d\u7684\u7ec4\u5408\u6570\u3002n \u4ee3\u8868\u884c\u6570\u51cf 1\uff0c\u4e0d\u4ee3\u8868\u5217\u6570\u51cf 1\u3002\u5982\uff1a\u7b2c\u4e94\u884c\u7684\u7b2c\u4e09\u4e2a\u6570\u5c31\u4e3a =6\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"yanghui/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <stdio.h> #define N 14 void main () { int i , j , k , n = 0 , a [ N ][ N ]; /*\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4a[14][14]*/ while ( n <= 0 || n >= 13 ){ /*\u63a7\u5236\u6253\u5370\u7684\u884c\u6570\u4e0d\u8981\u592a\u5927\uff0c\u8fc7\u5927\u4f1a\u9020\u6210\u663e\u793a\u4e0d\u89c4\u8303*/ printf ( \"\u8bf7\u8f93\u5165\u8981\u6253\u5370\u7684\u884c\u6570\uff1a\" ); scanf ( \"%d\" , & n ); } printf ( \"%d\u884c\u6768\u8f89\u4e09\u89d2\u5982\u4e0b\uff1a \\n \" , n ); for ( i = 1 ; i <= n ; i ++ ) a [ i ][ 1 ] = a [ i ][ i ] = 1 ; /*\u4e24\u8fb9\u7684\u6570\u4ee4\u5b83\u4e3a1\uff0c\u56e0\u4e3a\u73b0\u5728\u5faa\u73af\u4ece1\u5f00\u59cb\uff0c\u5c31\u8ba4\u4e3aa[i][1]\u4e3a\u7b2c\u4e00\u4e2a\u6570*/ for ( i = 3 ; i <= n ; i ++ ) for ( j = 2 ; j <= i - 1 ; j ++ ) a [ i ][ j ] = a [ i - 1 ][ j - 1 ] + a [ i - 1 ][ j ]; /*\u9664\u4e24\u8fb9\u7684\u6570\u5916\u90fd\u7b49\u4e8e\u4e0a\u4e24\u9876\u6570\u4e4b\u548c*/ for ( i = 1 ; i <= n ; i ++ ){ for ( k = 1 ; k <= n - i ; k ++ ) printf ( \" \" ); /*\u8fd9\u4e00\u884c\u4e3b\u8981\u662f\u5728\u8f93\u51fa\u6570\u4e4b\u524d\u6253\u4e0a\u7a7a\u683c\u5360\u4f4d\uff0c\u8ba9\u8f93\u51fa\u7684\u6570\u66f4\u7f8e\u89c2*/ for ( j = 1 ; j <= i ; j ++ ) /*j<=i\u7684\u539f\u56e0\u662f\u4e0d\u8f93\u51fa\u5176\u5b83\u7684\u6570\uff0c\u53ea\u8f93\u51fa\u6211\u4eec\u60f3\u8981\u7684\u6570*/ printf ( \"%6d\" , a [ i ][ j ]); printf ( \" \\n \" ); /*\u5f53\u4e00\u884c\u8f93\u51fa\u5b8c\u4ee5\u540e\u6362\u884c\u7ee7\u7eed\u4e0b\u4e00\u884c\u7684\u8f93\u51fa*/ } printf ( \" \\n \" ); }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"yuesefu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u7f16\u53f7\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cn \u7684 n \u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u4efb\u9009\u4e00\u4e2a\u6b63\u6574\u6570 m \u4f5c\u4e3a\u62a5\u6570\u4e0a\u9650\u503c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u4eba\u5f00\u59cb\u6309\u987a\u65f6\u9488\u65b9\u5411\u62a5\u6570\uff0c\u62a5\u6570\u5230 m \u65f6\u505c\u6b62\uff0c\u62a5\u6570\u4e3a m \u7684\u4eba\u51fa\u5217\u3002\u4ece\u51fa\u5217\u4eba\u7684\u987a\u65f6\u9488\u65b9\u5411\u7684\u4e0b\u4e00\u4e2a\u4eba\u5f00\u59cb\u53c8\u4ece 1 \u91cd\u65b0\u62a5\u6570\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u4eba\u90fd\u5168\u90e8\u51fa\u5217\u4e3a\u6b62\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> #define N 100 int josef ( int a [], int n , int m ) { int i , j , k = 0 ; for ( i = 0 ; i < n ; i ++ ) { j = 1 ; while ( j < m ) { while ( a [ k ] == 0 ) k = ( k + 1 ) % n ; j ++ ; k = ( k + 1 ) % n ; } while ( a [ k ] == 0 ) k = ( k + 1 ) % n ; printf ( \"%d \" , a [ k ]); a [ k ] = 0 ; } return 0 ; } int main () { int a [ 100 ]; int i , j , m , n ; printf ( \"input n and m\uff1a\" ); scanf ( \"%d%d\" , & n , & m ); for ( i = 0 ; i < n ; i ++ ) a [ i ] = i + 1 ; printf ( \" \\n output\uff1a \\n \" ); josef ( a , n , m ); printf ( \" \\n \" ); return 0 ; }","title":"29.\u7ea6\u745f\u592b\u73af\u95ee\u9898"},{"location":"yuesefu/#_1","text":"\u7f16\u53f7\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\uff0cn \u7684 n \u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u4efb\u9009\u4e00\u4e2a\u6b63\u6574\u6570 m \u4f5c\u4e3a\u62a5\u6570\u4e0a\u9650\u503c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u4eba\u5f00\u59cb\u6309\u987a\u65f6\u9488\u65b9\u5411\u62a5\u6570\uff0c\u62a5\u6570\u5230 m \u65f6\u505c\u6b62\uff0c\u62a5\u6570\u4e3a m \u7684\u4eba\u51fa\u5217\u3002\u4ece\u51fa\u5217\u4eba\u7684\u987a\u65f6\u9488\u65b9\u5411\u7684\u4e0b\u4e00\u4e2a\u4eba\u5f00\u59cb\u53c8\u4ece 1 \u91cd\u65b0\u62a5\u6570\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u4eba\u90fd\u5168\u90e8\u51fa\u5217\u4e3a\u6b62\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"yuesefu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <stdio.h> #define N 100 int josef ( int a [], int n , int m ) { int i , j , k = 0 ; for ( i = 0 ; i < n ; i ++ ) { j = 1 ; while ( j < m ) { while ( a [ k ] == 0 ) k = ( k + 1 ) % n ; j ++ ; k = ( k + 1 ) % n ; } while ( a [ k ] == 0 ) k = ( k + 1 ) % n ; printf ( \"%d \" , a [ k ]); a [ k ] = 0 ; } return 0 ; } int main () { int a [ 100 ]; int i , j , m , n ; printf ( \"input n and m\uff1a\" ); scanf ( \"%d%d\" , & n , & m ); for ( i = 0 ; i < n ; i ++ ) a [ i ] = i + 1 ; printf ( \" \\n output\uff1a \\n \" ); josef ( a , n , m ); printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"yufu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u5982\u679c\u4e00\u4e2a\u6e14\u592b\u4ece 2011 \u5e74 1 \u6708 1 \u65e5\u5f00\u59cb\u6bcf\u4e09\u5929\u6253\u4e00\u6b21\u6e14\uff0c\u4e24\u5929\u6652\u4e00\u6b21\u7f51\uff0c\u7f16\u7a0b\u5b9e\u73b0\u5f53\u8f93\u5165 2011 1 \u6708 1 \u65e5\u4ee5\u540e\u7684\u4efb\u610f\u4e00\u5929\uff0c\u8f93\u51fa\u8be5\u6e14\u592b\u662f\u5728\u6253\u6e14\u8fd8\u662f\u5728\u6652\u7f51\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <stdio.h> int leap ( int a ) /*\u81ea\u5b9a\u4e49\u51fd\u6570leap()\u7528\u6765\u6307\u5b9a\u8f93\u5165\u7684\u5e74\u4efd\u662f\u5426\u4e3a\u95f0\u5e74*/ { if ( a % 4 == 0 && a % 100 != 0 || a % 400 == 0 ) /* \u95f0\u5e74\u5224\u5b9a\u6761\u4ef6 */ return 1 ; /*\u662f\u95f0\u5e74\u8fd4\u56de1*/ else return 0 ; /*\u4e0d\u662f\u95f0\u5e74\u8fd4\u56deO*/ } int number ( int year , int month , int day ) /*\u81ea\u5b9a\u4e49\u51fd\u6570 number() \u8ba1\u7b97\u8f93\u5165\u65e5\u671f\u8ddd2011\u5e741\u67081\u65e5\u5171\u6709\u591a\u5c11\u5929*/ { int sum = 0 , i , j , k ; int a [ 12 ] = { 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; /*\u6570\u7ec4a\u5b58\u653e\u5e73\u5e74\u6bcf\u6708\u7684\u5929\u6570*/ int b [ 12 ] = { 31 , 29 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; /*\u6570\u7ec4b\u5b58\u653e\u95f0\u5e74\u6bcf\u6708\u7684\u5929\u6570*/ if ( leap ( year ) == 1 ) /*\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74*/ for ( i = 0 ; i < month - 1 ; i ++ ) sum += b [ i ]; /*\u662f\u95f0\u5e74\uff0c\u7d2f\u52a0\u6570\u7ec4b\u524dm-1\u4e2a\u6708\u4efd\u7684\u5929\u6570*/ else for ( i = 0 ; i < month - 1 ; i ++ ) sum += a [ i ]; /*\u4e0d\u662f\u95f0\u5e74\uff0c\u7d2f\u52a0\u6570\u7ec4a\u524dm-1\u4e2a\u6708\u4efd\u7684\u5929\u6570*/ for ( j = 2011 ; j < year ; j ++ ) if ( leap ( j ) == i ) sum += 366 ; /*2011\u5e74\u5230\u8f93\u5165\u7684\u5e74\u4efd\u662f\u95f0\u5e74\u7684\u52a0366*/ else sum += 365 ; /*2011\u5e74\u5230\u8f93\u5165\u7684\u5e74\u4efd\u4e0d\u662f\u95f0\u5e74\u7684\u52a0365*/ sum += day ; /*\u5c06\u524d\u9762\u7d2f\u52a0\u7684\u7ed3\u679c\u52a0\u4e0a\u65e5\u671f\uff0c\u6c42\u51fa\u603b\u5929\u6570*/ return sum ; /*\u8fd4\u56de\u8ba1\u7b97\u7684\u5929\u6570*/ } int main () { int year , month , day , n ; printf ( \"\u8bf7\u8f93\u5165\u5e74\u6708\u65e5 \\n \" ); scanf ( \"%d%d%d\" , & year , & month , & day ); /*\u8f93\u5165\u5e74\u6708\u65e5*/ n = number ( year , month , day ); /*\u8c03\u7528\u51fd\u6570 number()*/ if (( n % 5 ) < 4 && ( n % 5 ) > 0 ) /*\u4f59\u6570\u662f1\u62162\u62163\u65f6\u8bf4\u660e\u5728\u6253\u6e14\uff0c\u5426\u5219\u5728\u6652\u7f51*/ printf ( \"%d\uff1a%d\uff1a%d \u6253\u9c7c \\n \" , year , month , day ); else printf ( \"%d\uff1a%d\uff1a%d \u6652\u7f51 \\n \" , year , month , day ); return 0 ; }","title":"4.\u6e14\u592b\u6253\u9c7c\u6652\u7f51"},{"location":"yufu/#_1","text":"\u5982\u679c\u4e00\u4e2a\u6e14\u592b\u4ece 2011 \u5e74 1 \u6708 1 \u65e5\u5f00\u59cb\u6bcf\u4e09\u5929\u6253\u4e00\u6b21\u6e14\uff0c\u4e24\u5929\u6652\u4e00\u6b21\u7f51\uff0c\u7f16\u7a0b\u5b9e\u73b0\u5f53\u8f93\u5165 2011 1 \u6708 1 \u65e5\u4ee5\u540e\u7684\u4efb\u610f\u4e00\u5929\uff0c\u8f93\u51fa\u8be5\u6e14\u592b\u662f\u5728\u6253\u6e14\u8fd8\u662f\u5728\u6652\u7f51\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"yufu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <stdio.h> int leap ( int a ) /*\u81ea\u5b9a\u4e49\u51fd\u6570leap()\u7528\u6765\u6307\u5b9a\u8f93\u5165\u7684\u5e74\u4efd\u662f\u5426\u4e3a\u95f0\u5e74*/ { if ( a % 4 == 0 && a % 100 != 0 || a % 400 == 0 ) /* \u95f0\u5e74\u5224\u5b9a\u6761\u4ef6 */ return 1 ; /*\u662f\u95f0\u5e74\u8fd4\u56de1*/ else return 0 ; /*\u4e0d\u662f\u95f0\u5e74\u8fd4\u56deO*/ } int number ( int year , int month , int day ) /*\u81ea\u5b9a\u4e49\u51fd\u6570 number() \u8ba1\u7b97\u8f93\u5165\u65e5\u671f\u8ddd2011\u5e741\u67081\u65e5\u5171\u6709\u591a\u5c11\u5929*/ { int sum = 0 , i , j , k ; int a [ 12 ] = { 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; /*\u6570\u7ec4a\u5b58\u653e\u5e73\u5e74\u6bcf\u6708\u7684\u5929\u6570*/ int b [ 12 ] = { 31 , 29 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }; /*\u6570\u7ec4b\u5b58\u653e\u95f0\u5e74\u6bcf\u6708\u7684\u5929\u6570*/ if ( leap ( year ) == 1 ) /*\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74*/ for ( i = 0 ; i < month - 1 ; i ++ ) sum += b [ i ]; /*\u662f\u95f0\u5e74\uff0c\u7d2f\u52a0\u6570\u7ec4b\u524dm-1\u4e2a\u6708\u4efd\u7684\u5929\u6570*/ else for ( i = 0 ; i < month - 1 ; i ++ ) sum += a [ i ]; /*\u4e0d\u662f\u95f0\u5e74\uff0c\u7d2f\u52a0\u6570\u7ec4a\u524dm-1\u4e2a\u6708\u4efd\u7684\u5929\u6570*/ for ( j = 2011 ; j < year ; j ++ ) if ( leap ( j ) == i ) sum += 366 ; /*2011\u5e74\u5230\u8f93\u5165\u7684\u5e74\u4efd\u662f\u95f0\u5e74\u7684\u52a0366*/ else sum += 365 ; /*2011\u5e74\u5230\u8f93\u5165\u7684\u5e74\u4efd\u4e0d\u662f\u95f0\u5e74\u7684\u52a0365*/ sum += day ; /*\u5c06\u524d\u9762\u7d2f\u52a0\u7684\u7ed3\u679c\u52a0\u4e0a\u65e5\u671f\uff0c\u6c42\u51fa\u603b\u5929\u6570*/ return sum ; /*\u8fd4\u56de\u8ba1\u7b97\u7684\u5929\u6570*/ } int main () { int year , month , day , n ; printf ( \"\u8bf7\u8f93\u5165\u5e74\u6708\u65e5 \\n \" ); scanf ( \"%d%d%d\" , & year , & month , & day ); /*\u8f93\u5165\u5e74\u6708\u65e5*/ n = number ( year , month , day ); /*\u8c03\u7528\u51fd\u6570 number()*/ if (( n % 5 ) < 4 && ( n % 5 ) > 0 ) /*\u4f59\u6570\u662f1\u62162\u62163\u65f6\u8bf4\u660e\u5728\u6253\u6e14\uff0c\u5426\u5219\u5728\u6652\u7f51*/ printf ( \"%d\uff1a%d\uff1a%d \u6253\u9c7c \\n \" , year , month , day ); else printf ( \"%d\uff1a%d\uff1a%d \u6652\u7f51 \\n \" , year , month , day ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"zhijiecharu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u63d2\u5165\u6392\u5e8f\u662f\u628a\u4e00\u4e2a\u8bb0\u5f55\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u7684\u6709\u5e8f\u5e8f\u5217\u4e2d\uff0c\u4f7f\u6574\u4e2a\u5e8f\u5217\u5728\u63d2\u5165\u8be5\u8bb0\u5f55\u540e\u4ecd\u7136\u6709\u5e8f\u3002\u63d2\u5165\u6392\u5e8f\u4e2d\u8f83\u7b80\u5355\u7684\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff0c\u5176\u63d2\u5165\u4f4d\u7f6e\u7684\u786e\u5b9a\u65b9\u6cd5\u662f\u5c06\u5f85\u63d2\u5165\u7684\u8bb0\u5f55\u4e0e\u6709\u5e8f\u533a\u4e2d\u7684\u5404\u8bb0\u5f55\u81ea\u53f3\u5411\u5de6\u4f9d\u6b21\u6bd4\u8f83\u5176\u5173\u952e\u5b57\u503c\u7684\u5927\u5c0f\u3002\u672c\u5b9e\u4f8b\u8981\u6c42\u4f7f\u7528\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u6cd5\u5c06\u6570\u5b57\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <stdio.h> int insort ( int s [], int n ) /* \u81ea\u5b9a\u4e49\u51fd\u6570 insort()*/ { int i , j ; for ( i = 2 ; i <= n ; i ++ ) //\u6570\u7ec4\u4e0b\u6807\u4ece2\u5f00\u59cb\uff0cs[0]\u505a\u76d1\u89c6\u54e8\uff0cs[1]\u4e00\u4e2a\u6570\u636e\u65e0\u53ef\u6bd4\u6027 { s [ 0 ] = s [ i ]; //\u7ed9\u76d1\u89c6\u54e8\u965a\u503c j = i - 1 ; //\u786e\u5b9a\u8981\u6bd4\u8f83\u5143\u7d20\u7684\u6700\u53f3\u8fb9\u4f4d\u9ec4 while ( s [ 0 ] < s [ j ]) { s [ j + 1 ] = s [ j ]; //\u6570\u636e\u53f3\u79fb j -- ; //\u4ea7\u79fb\u5411\u5de6\u8fb9\u4e00\u4e2a\u672a\u6bd4\u8f83\u7684\u6570 } s [ j + 1 ] = s [ 0 ]; //\u5728\u786e\u5b9a\u7684\u4f4d\u7f6e\u63d2\u5165s[i] } return 0 ; } int main () { int a [ 11 ], i ; //\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u6728\u6574\u7529 printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\u636e\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u63a5\u6536\u4ece\u952e\u76d8\u8f93\u5165\u768410\u4e2a\u6570\u636e\u5230\u6570\u7ec4a\u4e2d printf ( \"\u539f\u59cb\u987a\u5e8f\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u5c06\u672a\u6392\u5e8f\u524d\u7684\u987a\u5e8f\u8f93\u51fa insort ( a , 10 ); //\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 insort() printf ( \" \\n \u63d2\u5165\u6570\u636e\u6392\u5e8f\u540e\u987a\u5e8f\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u5c06\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u8f93\u51fa printf ( \" \\n \" ); return 0 ; }","title":"7.\u76f4\u63a5\u63d2\u5165\u6392\u5e8f"},{"location":"zhijiecharu/#_1","text":"\u63d2\u5165\u6392\u5e8f\u662f\u628a\u4e00\u4e2a\u8bb0\u5f55\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u7684\u6709\u5e8f\u5e8f\u5217\u4e2d\uff0c\u4f7f\u6574\u4e2a\u5e8f\u5217\u5728\u63d2\u5165\u8be5\u8bb0\u5f55\u540e\u4ecd\u7136\u6709\u5e8f\u3002\u63d2\u5165\u6392\u5e8f\u4e2d\u8f83\u7b80\u5355\u7684\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff0c\u5176\u63d2\u5165\u4f4d\u7f6e\u7684\u786e\u5b9a\u65b9\u6cd5\u662f\u5c06\u5f85\u63d2\u5165\u7684\u8bb0\u5f55\u4e0e\u6709\u5e8f\u533a\u4e2d\u7684\u5404\u8bb0\u5f55\u81ea\u53f3\u5411\u5de6\u4f9d\u6b21\u6bd4\u8f83\u5176\u5173\u952e\u5b57\u503c\u7684\u5927\u5c0f\u3002\u672c\u5b9e\u4f8b\u8981\u6c42\u4f7f\u7528\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u6cd5\u5c06\u6570\u5b57\u7531\u5c0f\u5230\u5927\u8fdb\u884c\u6392\u5e8f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"zhijiecharu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <stdio.h> int insort ( int s [], int n ) /* \u81ea\u5b9a\u4e49\u51fd\u6570 insort()*/ { int i , j ; for ( i = 2 ; i <= n ; i ++ ) //\u6570\u7ec4\u4e0b\u6807\u4ece2\u5f00\u59cb\uff0cs[0]\u505a\u76d1\u89c6\u54e8\uff0cs[1]\u4e00\u4e2a\u6570\u636e\u65e0\u53ef\u6bd4\u6027 { s [ 0 ] = s [ i ]; //\u7ed9\u76d1\u89c6\u54e8\u965a\u503c j = i - 1 ; //\u786e\u5b9a\u8981\u6bd4\u8f83\u5143\u7d20\u7684\u6700\u53f3\u8fb9\u4f4d\u9ec4 while ( s [ 0 ] < s [ j ]) { s [ j + 1 ] = s [ j ]; //\u6570\u636e\u53f3\u79fb j -- ; //\u4ea7\u79fb\u5411\u5de6\u8fb9\u4e00\u4e2a\u672a\u6bd4\u8f83\u7684\u6570 } s [ j + 1 ] = s [ 0 ]; //\u5728\u786e\u5b9a\u7684\u4f4d\u7f6e\u63d2\u5165s[i] } return 0 ; } int main () { int a [ 11 ], i ; //\u5b9a\u4e49\u6570\u7ec4\u53ca\u53d8\u91cf\u4e3a\u57fa\u6728\u6574\u7529 printf ( \"\u8bf7\u8f93\u516510\u4e2a\u6570\u636e\uff1a \\n \" ); for ( i = 1 ; i <= 10 ; i ++ ) scanf ( \"%d\" , & a [ i ]); //\u63a5\u6536\u4ece\u952e\u76d8\u8f93\u5165\u768410\u4e2a\u6570\u636e\u5230\u6570\u7ec4a\u4e2d printf ( \"\u539f\u59cb\u987a\u5e8f\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u5c06\u672a\u6392\u5e8f\u524d\u7684\u987a\u5e8f\u8f93\u51fa insort ( a , 10 ); //\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 insort() printf ( \" \\n \u63d2\u5165\u6570\u636e\u6392\u5e8f\u540e\u987a\u5e8f\uff1a \\n \" ); for ( i = 1 ; i < 11 ; i ++ ) printf ( \"%5d\" , a [ i ]); //\u5c06\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u8f93\u51fa printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"zhuituzi/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4e00\u53ea\u5154\u5b50\u8eb2\u8fdb\u4e86 10 \u4e2a\u73af\u5f62\u5206\u5e03\u7684\u6d1e\u7684\u67d0\u4e00\u4e2a\uff0c\u72fc\u5728\u7b2c\u4e00\u4e2a\u6d1e\u6ca1\u6709\u627e\u5230\u5154\u5b50\uff0c\u5c31\u9694\u4e00\u4e2a\u6d1e\uff0c\u5230\u7b2c\u4e09\u4e2a\u6d1e\u53bb\u627e\uff0c\u4e5f\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u9694\u4e24\u4e2a\u6d1e\uff0c\u5230\u7b2c\u516d\u4e2a\u6d1e\u53bb\u627e\uff0c\u4ee5\u540e\u6bcf\u6b21\u591a\u9694\u4e00\u4e2a\u6d1e \u53bb\u627e\u5154\u5b50\u2026\u2026\u8fd9\u6837\u4e0b\u53bb\uff0c\u7ed3\u679c\u4e00\u76f4\u627e\u4e0d\u5230\u5154\u5b50\uff0c\u8bf7\u95ee\uff1a\u5154\u5b50\u53ef\u80fd\u8eb2\u5728\u54ea\u4e2a\u6d1e\u4e2d\uff1f \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <stdio.h> int main () { int i ; bool pos [ 10 ] = { 0 }; int lang = 0 ; for ( i = 0 ; i < 100 ; i ++ ) { pos [ lang ] = true ; lang ++ ; lang += i ; lang = lang % 10 ; } for ( i = 0 ; i < 10 ; i ++ ) if ( ! pos [ i ]) printf ( \"\u5154\u5b50\u53ef\u80fd\u5728\u7b2c%d\u6d1e\u4e2d \\n \" , i + 1 ); return 0 ; }","title":"23.\u72fc\u8ffd\u5154\u5b50\u95ee\u9898"},{"location":"zhuituzi/#_1","text":"\u4e00\u53ea\u5154\u5b50\u8eb2\u8fdb\u4e86 10 \u4e2a\u73af\u5f62\u5206\u5e03\u7684\u6d1e\u7684\u67d0\u4e00\u4e2a\uff0c\u72fc\u5728\u7b2c\u4e00\u4e2a\u6d1e\u6ca1\u6709\u627e\u5230\u5154\u5b50\uff0c\u5c31\u9694\u4e00\u4e2a\u6d1e\uff0c\u5230\u7b2c\u4e09\u4e2a\u6d1e\u53bb\u627e\uff0c\u4e5f\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u9694\u4e24\u4e2a\u6d1e\uff0c\u5230\u7b2c\u516d\u4e2a\u6d1e\u53bb\u627e\uff0c\u4ee5\u540e\u6bcf\u6b21\u591a\u9694\u4e00\u4e2a\u6d1e \u53bb\u627e\u5154\u5b50\u2026\u2026\u8fd9\u6837\u4e0b\u53bb\uff0c\u7ed3\u679c\u4e00\u76f4\u627e\u4e0d\u5230\u5154\u5b50\uff0c\u8bf7\u95ee\uff1a\u5154\u5b50\u53ef\u80fd\u8eb2\u5728\u54ea\u4e2a\u6d1e\u4e2d\uff1f","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"zhuituzi/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <stdio.h> int main () { int i ; bool pos [ 10 ] = { 0 }; int lang = 0 ; for ( i = 0 ; i < 100 ; i ++ ) { pos [ lang ] = true ; lang ++ ; lang += i ; lang = lang % 10 ; } for ( i = 0 ; i < 10 ; i ++ ) if ( ! pos [ i ]) printf ( \"\u5154\u5b50\u53ef\u80fd\u5728\u7b2c%d\u6d1e\u4e2d \\n \" , i + 1 ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"zishoushu/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u81ea\u5b88\u6570\u662f\u6307\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u5c3e\u6570\u7b49\u4e8e\u8be5\u6570\u81ea\u8eab\u7684\u81ea\u7136\u6570\u3002\u4f8b\u5982\uff1a 52 = 25 252 = 625 762 = 5776 93762 = 87909376 \u6c42100000\u4ee5\u5185\u7684\u81ea\u5b88\u6570\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <stdio.h> int main () { long mul , number , k , a , b ; printf ( \"It exists following automorphic nmbers small than 100000: \\n \" ); for ( number = 0 ; number < 100000 ; number ++ ) { for ( mul = number , k = 1 ; ( mul /= 10 ) > 0 ; k *= 10 ); /*\u7531number\u7684\u4f4d\u6570\u786e\u5b9a\u622a\u53d6\u6570\u5b57\u8fdb\u884c\u4e58\u6cd5\u65f6\u7684\u7cfb\u6570k*/ a = k * 10 ; /*a\u4e3a\u622a\u53d6\u90e8\u5206\u79ef\u65f6\u7684\u7cfb\u6570*/ mul = 0 ; /*\u79ef\u7684\u6700\u540en\u4f4d*/ b = 10 ; /*b\u4e3a\u622a\u53d6\u4e58\u6570\u76f8\u5e94\u4f4d\u65f6\u7684\u7cfb\u6570*/ while ( k > 0 ) { mul = ( mul + ( number % ( k * 10 ) ) * ( number % b - number % ( b / 10 ) ) ) % a ; /*(\u90e8\u5206\u79ef+\u622a\u53d6\u88ab\u4e58\u6570\u7684\u540eN\u4f4d*\u622a\u53d6\u4e58\u6570\u7684\u7b2cM\u4f4d)\uff0c%a\u518d\u622a\u53d6\u90e8\u5206\u79ef*/ k /= 10 ; /*k\u4e3a\u622a\u53d6\u88ab\u4e58\u6570\u65f6\u7684\u7cfb\u6570*/ b *= 10 ; } if ( number == mul ) /*\u5224\u5b9a\u82e5\u4e3a\u81ea\u5b88\u6570\u5219\u8f93\u51fa*/ printf ( \"%ld \" , number ); } printf ( \" \\n \" ); return 0 ; }","title":"43.\u6c42\u81ea\u5b88\u6570"},{"location":"zishoushu/#_1","text":"\u81ea\u5b88\u6570\u662f\u6307\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u5c3e\u6570\u7b49\u4e8e\u8be5\u6570\u81ea\u8eab\u7684\u81ea\u7136\u6570\u3002\u4f8b\u5982\uff1a 52 = 25 252 = 625 762 = 5776 93762 = 87909376 \u6c42100000\u4ee5\u5185\u7684\u81ea\u5b88\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"zishoushu/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <stdio.h> int main () { long mul , number , k , a , b ; printf ( \"It exists following automorphic nmbers small than 100000: \\n \" ); for ( number = 0 ; number < 100000 ; number ++ ) { for ( mul = number , k = 1 ; ( mul /= 10 ) > 0 ; k *= 10 ); /*\u7531number\u7684\u4f4d\u6570\u786e\u5b9a\u622a\u53d6\u6570\u5b57\u8fdb\u884c\u4e58\u6cd5\u65f6\u7684\u7cfb\u6570k*/ a = k * 10 ; /*a\u4e3a\u622a\u53d6\u90e8\u5206\u79ef\u65f6\u7684\u7cfb\u6570*/ mul = 0 ; /*\u79ef\u7684\u6700\u540en\u4f4d*/ b = 10 ; /*b\u4e3a\u622a\u53d6\u4e58\u6570\u76f8\u5e94\u4f4d\u65f6\u7684\u7cfb\u6570*/ while ( k > 0 ) { mul = ( mul + ( number % ( k * 10 ) ) * ( number % b - number % ( b / 10 ) ) ) % a ; /*(\u90e8\u5206\u79ef+\u622a\u53d6\u88ab\u4e58\u6570\u7684\u540eN\u4f4d*\u622a\u53d6\u4e58\u6570\u7684\u7b2cM\u4f4d)\uff0c%a\u518d\u622a\u53d6\u90e8\u5206\u79ef*/ k /= 10 ; /*k\u4e3a\u622a\u53d6\u88ab\u4e58\u6570\u65f6\u7684\u7cfb\u6570*/ b *= 10 ; } if ( number == mul ) /*\u5224\u5b9a\u82e5\u4e3a\u81ea\u5b88\u6570\u5219\u8f93\u51fa*/ printf ( \"%ld \" , number ); } printf ( \" \\n \" ); return 0 ; }","title":"\u4ee3\u7801\u8fd0\u884c"},{"location":"zuidazuixiao/","text":"\u9898\u76ee\u63cf\u8ff0 \u00b6 \u4ece\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570 a \u548c b\uff0c\u6c42\u5176\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002 \u4ee3\u7801\u8fd0\u884c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <stdio.h> int main () { int a , b , c , m , t ; printf ( \"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6570: \\n \" ); scanf ( \"%d%d\" , & a , & b ); if ( a < b ) { t = a ; a = b ; b = t ; } m = a * b ; c = a % b ; while ( c != 0 ) { a = b ; b = c ; c = a % b ; } printf ( \"\u6700\u5927\u516c\u7ea6\u6570\u662f: \\n %d \\n \" , b ); printf ( \"\u6700\u5c0f\u516c\u500d\u6570\u662f: \\n %d \\n \" , m / b ); }","title":"16.\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570"},{"location":"zuidazuixiao/#_1","text":"\u4ece\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570 a \u548c b\uff0c\u6c42\u5176\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"zuidazuixiao/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <stdio.h> int main () { int a , b , c , m , t ; printf ( \"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6570: \\n \" ); scanf ( \"%d%d\" , & a , & b ); if ( a < b ) { t = a ; a = b ; b = t ; } m = a * b ; c = a % b ; while ( c != 0 ) { a = b ; b = c ; c = a % b ; } printf ( \"\u6700\u5927\u516c\u7ea6\u6570\u662f: \\n %d \\n \" , b ); printf ( \"\u6700\u5c0f\u516c\u500d\u6570\u662f: \\n %d \\n \" , m / b ); }","title":"\u4ee3\u7801\u8fd0\u884c"}]}